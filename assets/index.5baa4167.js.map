{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,WAAW;AAAK,IAAI,WAAW;AAAK,IAAI,aAAa;AAAM,IAAI,eAAe;AAAmB,OAAO,OAAO,gBAAgB;AAAmB;AAEtJ,iJAAiJ,GACjJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,GACA,IAAI,aAAa;AACjB,IAAI,YAAY,OAAO,OAAO;AAC9B,SAAS,OAAO,UAAU;IACxB,UAAU,KAAK,IAAI,EAAE;IACrB,IAAI,CAAC,MAAM;QACT,MAAM,OAAO,OAAO,OAAO,CAAC,WAAW;QACvC,kBAAkB,EAAE;QACpB,mBAAmB,EAAE;QACrB,QAAQ,SAAU,EAAE;YAClB,IAAI,CAAC,iBAAiB,KAAK,MAAM,YAAa;QAChD;QACA,SAAS,SAAU,EAAE;YACnB,IAAI,CAAC,kBAAkB,KAAK;QAC9B;IACF;IACA,OAAO,OAAO,OAAO,CAAC,WAAW,GAAG;AACtC;AACA,OAAO,OAAO,SAAS;AACvB,OAAO,OAAO,UAAU,CAAC;AACzB,IAAI,cAAc,0BAA0B,KAAI,gBAAgB,mCAAmC,KAAI,eAAe,mCAAmC;AAEzJ,SAAS;IACP,OAAO,YAAa,CAAA,SAAS,SAAS,QAAQ,YAAY,IAAI,SAAS,WAAW,WAAU;AAC9F;AACA,SAAS;IACP,OAAO,YAAY,SAAS;AAC9B;AAEA,wCAAwC;AACxC,IAAI,SAAS,OAAO,OAAO;AAC3B,IAAI,AAAC,CAAA,CAAC,UAAU,CAAC,OAAO,eAAc,KAAM,OAAO,cAAc,aAAa;IAC5E,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,WAAW,cAAc,SAAS,YAAY,YAAY,CAAC,8BAA8B,KAAK,YAAY,QAAQ;IACtH,IAAI,KAAK,IAAI,UAAU,WAAW,QAAQ,WAAY,CAAA,OAAO,MAAM,OAAO,EAAC,IAAK;IAEhF,wBAAwB;IACxB,IAAI,SAAS,OAAO,WAAW,cAAc,OAAO,YAAY,cAAc,OAAO,UAAU;IAE/F,oDAAoD;IACpD,0DAA0D;IAC1D,IAAI,oBAAoB;IACxB,IAAI;QACD,CAAA,GAAG,IAAG,EAAG;IACZ,EAAE,OAAO,KAAK;QACZ,oBAAoB,IAAI,MAAM,SAAS;IACzC;IAEA,aAAa;IACb,GAAG,YAAY,eAAgB,MAAM,wBAAwB,GAAzB;QAClC,gBAAgB,CAAC,EAAE,0BAA0B;QAC7C,iBAAiB,EAAE;QACnB,kBAAkB,EAAE;QACpB,IAAI,KAAK,eAAe,MAAK,KAAK,MAAM,MAAM;QAC9C,IAAI,KAAK,SAAS,UAAU;YAC1B,uCAAuC;YACvC,IAAI,OAAO,aAAa,aACtB;YAEF,IAAI,SAAS,KAAK,OAAO,OAAO,CAAA,QAAS,MAAM,YAAY;YAE3D,oBAAoB;YACpB,IAAI,UAAU,OAAO,MAAM,CAAA;gBACzB,OAAO,MAAM,SAAS,SAAS,MAAM,SAAS,QAAQ,eAAe,OAAO,OAAO,MAAM,MAAM,IAAI,MAAM;YAC3G;YACA,IAAI,SAAS;gBACX,QAAQ;gBAER,yEAAyE;gBACzE,IAAI,OAAO,WAAW,eAAe,OAAO,gBAAgB,aAC1D,OAAO,cAAc,IAAI,YAAY;gBAEvC,MAAM,gBAAgB;gBAEtB,0BAA0B;gBAC1B,IAAI,kBAAkB,CAAC,EAAE,0BAA0B;gBACnD,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,QAAQ,IAAK;oBAC/C,IAAI,KAAK,eAAe,CAAC,EAAE,CAAC,EAAE;oBAC9B,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;wBACxB,WAAW,eAAe,CAAC,EAAE,CAAC,EAAE,EAAE;wBAClC,eAAe,CAAC,GAAG,GAAG;oBACxB;gBACF;gBAEA,8FAA8F;gBAC9F,kBAAkB,CAAC;gBACnB,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,QAAQ,IAAK;oBAC9C,IAAI,KAAK,cAAc,CAAC,EAAE,CAAC,EAAE;oBAC7B,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;wBACxB,UAAU,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE;wBAChC,eAAe,CAAC,GAAG,GAAG;oBACxB;gBACF;YACF,OAAO;QACT;QACA,IAAI,KAAK,SAAS,SAAS;YACzB,+BAA+B;YAC/B,KAAK,IAAI,kBAAkB,KAAK,YAAY,KAAM;gBAChD,IAAI,QAAQ,eAAe,YAAY,eAAe,YAAY,eAAe;gBACjF,QAAQ,MAAM,4BAAkB,eAAe,UAAU,OAAO,QAAQ,SAAS,eAAe,MAAM,KAAK;YAC7G;YACA,IAAI,OAAO,aAAa,aAAa;gBACnC,gCAAgC;gBAChC;gBACA,IAAI,UAAU,mBAAmB,KAAK,YAAY;gBAClD,aAAa;gBACb,SAAS,KAAK,YAAY;YAC5B;QACF;IACF;IACA,GAAG,UAAU,SAAU,CAAC;QACtB,QAAQ,MAAM,EAAE;IAClB;IACA,GAAG,UAAU;QACX,QAAQ,KAAK;IACf;AACF;AACA,SAAS;IACP,IAAI,UAAU,SAAS,eAAe;IACtC,IAAI,SAAS;QACX,QAAQ;QACR,QAAQ,IAAI;IACd;AACF;AACA,SAAS,mBAAmB,WAAW;IACrC,IAAI,UAAU,SAAS,cAAc;IACrC,QAAQ,KAAK;IACb,IAAI,YAAY;IAChB,KAAK,IAAI,cAAc,YAAa;QAClC,IAAI,QAAQ,WAAW,OAAO,SAAS,WAAW,OAAO,OAAO,CAAC,GAAG;YAClE,OAAO,CAAC,EAAE,EAAE;sCACoB,EAAE,mBAAmB,MAAM,UAAU,2FAA2F,EAAE,MAAM,SAAS;AACvL,EAAE,MAAM,KAAK,CAAC;QACV,GAAG,MAAM,WAAW;QACpB,aAAa,CAAC;;;aAGL,EAAE,WAAW,QAAQ;;aAErB,EAAE,MAAM;;UAEX,EAAE,WAAW,MAAM,IAAI,CAAA,OAAQ,uBAAa,OAAO,UAAU,KAAK,IAAI;;QAExE,EAAE,WAAW,gBAAgB,CAAC,uCAAuC,EAAE,WAAW,cAAc,sCAAsC,CAAC,GAAG,GAAG;;IAEjJ,CAAC;IACH;IACA,aAAa;IACb,QAAQ,YAAY;IACpB,OAAO;AACT;AACA,SAAS;IACP,IAAI,YAAY,UACd,SAAS;SACJ,IAAI,UAAU,OAAO,WAAW,OAAO,QAAQ,QACpD,OAAO,QAAQ;AAEnB;AACA,SAAS,WAAW,MAAM,EAAE,EAAE,EAAE,mCAAmC;IACjE,IAAI,UAAU,OAAO;IACrB,IAAI,CAAC,SACH,OAAO,EAAE;IAEX,IAAI,UAAU,EAAE;IAChB,IAAI,GAAG,GAAG;IACV,IAAK,KAAK,QACR,IAAK,KAAK,OAAO,CAAC,EAAE,CAAC,EAAE,CAAE;QACvB,MAAM,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACtB,IAAI,QAAQ,MAAM,MAAM,QAAQ,QAAQ,GAAG,CAAC,IAAI,SAAS,EAAE,KAAK,IAC9D,QAAQ,KAAK;YAAC;YAAQ;SAAE;IAE5B;IAEF,IAAI,OAAO,QACT,UAAU,QAAQ,OAAO,WAAW,OAAO,QAAQ;IAErD,OAAO;AACT;AACA,SAAS,WAAW,IAAI;IACtB,IAAI,OAAO,KAAK,aAAa;IAC7B,IAAI,CAAC,MACH;IAEF,IAAI,UAAU,KAAK;IACnB,QAAQ,SAAS;QACf,IAAI,KAAK,eAAe,MACtB,aAAa;QACb,KAAK,WAAW,YAAY;IAEhC;IACA,QAAQ,aAAa,QACrB,aAAa;IACb,KAAK,MAAM,IAAI,CAAC,EAAE,GAAG,MAAM,KAAK;IAChC,aAAa;IACb,KAAK,WAAW,aAAa,SAAS,KAAK;AAC7C;AACA,IAAI,aAAa;AACjB,SAAS;IACP,IAAI,YACF;IAEF,aAAa,WAAW;QACtB,IAAI,QAAQ,SAAS,iBAAiB;QACtC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAK;YACrC,gCAAgC;YAChC,IAAI,KAAK,WAAW,MAAK,KAAK,CAAC,EAAE,CAAC,aAAa;YAC/C,IAAI,WAAW;YACf,IAAI,sBAAsB,aAAa,cAAc,IAAI,OAAO,mDAAmD,WAAW,KAAK,QAAQ,KAAK,QAAQ,WAAW,MAAM;YACzK,IAAI,WAAW,gBAAgB,KAAK,SAAS,KAAK,QAAQ,SAAS,YAAY,KAAK,CAAC;YACrF,IAAI,CAAC,UACH,WAAW,KAAK,CAAC,EAAE;QAEvB;QACA,aAAa;IACf,GAAG;AACL;AACA,SAAS,YAAY,KAAK;IACxB,IAAI,MAAM,SAAS,MAAM;QACvB,IAAI,OAAO,aAAa,aAAa;YACnC,IAAI,SAAS,SAAS,cAAc;YACpC,OAAO,MAAM,MAAM,MAAM,QAAQ,KAAK;YACtC,IAAI,MAAM,iBAAiB,YACzB,OAAO,OAAO;YAEhB,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;gBACJ,OAAO,SAAS,IAAM,QAAQ;gBAC9B,OAAO,UAAU;gBAChB,CAAA,iBAAiB,SAAS,IAAG,MAAO,QAAQ,mBAAmB,KAAK,KAAa,eAAe,YAAY;YAC/G;QACF,OAAO,IAAI,OAAO,kBAAkB,YAAY;YAC9C,iBAAiB;YACjB,IAAI,MAAM,iBAAiB,YACzB,OAAO,OAAmB,MAAM,MAAM,QAAQ,KAAK;iBAEnD,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;oBACF,cAA0B,MAAM,MAAM,QAAQ,KAAK;oBACnD;gBACF,EAAE,OAAO,KAAK;oBACZ,OAAO;gBACT;YACF;QAEJ;IACF;AACF;AACA,eAAe,gBAAgB,MAAM;IACnC,OAAO,kBAAkB,OAAO,OAAO;IACvC,IAAI;IACJ,IAAI;QACF,kEAAkE;QAClE,gEAAgE;QAChE,gEAAgE;QAChE,mDAAmD;QACnD,iDAAiD;QACjD,mDAAmD;QACnD,IAAI,CAAC,mBAAmB;YACtB,IAAI,WAAW,OAAO,IAAI,CAAA;gBACxB,IAAI;gBACJ,OAAO,AAAC,CAAA,eAAe,YAAY,MAAK,MAAO,QAAQ,iBAAiB,KAAK,IAAI,KAAK,IAAI,aAAa,MAAM,CAAA;oBAC3G,oCAAoC;oBACpC,oEAAoE;oBACpE,IAAI,UAAU,OAAO,WAAW,OAAO,QAAQ,cAAc,oBAAoB,GAAG;wBAClF,IAAI,OAAO,4BAA4B,eAAe,kBAAkB,0BAA0B;4BAChG,OAAO,QAAQ;4BACf;wBACF;wBACA,MAAM,MAAM,OAAO,QAAQ,OAAO,+BAA+B,mBAAmB,MAAM,MAAM,QAAQ,KAAK;wBAC7G,OAAO,YAAY;oBACrB;oBACA,MAAM;gBACR;YACF;YACA,kBAAkB,MAAM,QAAQ,IAAI;QACtC;QACA,OAAO,QAAQ,SAAU,KAAK;YAC5B,SAAS,OAAO,OAAO,MAAM;QAC/B;IACF,SAAU;QACR,OAAO,OAAO;QACd,IAAI,iBACF,gBAAgB,QAAQ,CAAA;YACtB,IAAI,QAAQ;gBACV,IAAI;gBACH,CAAA,kBAAkB,SAAS,IAAG,MAAO,QAAQ,oBAAoB,KAAK,KAAa,gBAAgB,YAAY;YAClH;QACF;IAEJ;AACF;AACA,SAAS,SAAS,OAAO,kBAAkB,GAAnB,EAAuB,MAAM,cAAc,GAAf;IAClD,IAAI,UAAU,OAAO;IACrB,IAAI,CAAC,SACH;IAEF,IAAI,MAAM,SAAS,OACjB;SACK,IAAI,MAAM,SAAS,MAAM;QAC9B,IAAI,OAAO,MAAM,YAAY,CAAC,OAAO,cAAc;QACnD,IAAI,MAAM;YACR,IAAI,OAAO,CAAC,MAAM,GAAG,EAAE;gBACrB,iEAAiE;gBACjE,oHAAoH;gBACpH,IAAI,UAAU,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClC,IAAK,IAAI,OAAO,QACd,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAAE;oBAC5C,IAAI,KAAK,OAAO,CAAC,IAAI;oBACrB,IAAI,UAAU,WAAW,OAAO,OAAO,MAAM;oBAC7C,IAAI,QAAQ,WAAW,GACrB,UAAU,OAAO,OAAO,MAAM;gBAElC;YAEJ;YACA,IAAI,mBAGF,AAFA,4DAA4D;YAC5D,+CAA+C;YAC9C,CAAA,GAAG,IAAG,EAAG,MAAM;YAGlB,aAAa;YACb,IAAI,KAAK,OAAO,eAAe,CAAC,MAAM,GAAG;YACzC,OAAO,CAAC,MAAM,GAAG,GAAG;gBAAC;gBAAI;aAAK;QAChC,OAAO,IAAI,OAAO,QAChB,SAAS,OAAO,QAAQ;IAE5B;AACF;AACA,SAAS,UAAU,MAAM,EAAE,EAAE;IAC3B,IAAI,UAAU,OAAO;IACrB,IAAI,CAAC,SACH;IAEF,IAAI,OAAO,CAAC,GAAG,EAAE;QACf,8EAA8E;QAC9E,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,EAAE;QACzB,IAAI,UAAU,EAAE;QAChB,IAAK,IAAI,OAAO,KAAM;YACpB,IAAI,UAAU,WAAW,OAAO,OAAO,MAAM,IAAI,CAAC,IAAI;YACtD,IAAI,QAAQ,WAAW,GACrB,QAAQ,KAAK,IAAI,CAAC,IAAI;QAE1B;QAEA,sGAAsG;QACtG,OAAO,OAAO,CAAC,GAAG;QAClB,OAAO,OAAO,KAAK,CAAC,GAAG;QAEvB,0BAA0B;QAC1B,QAAQ,QAAQ,CAAA;YACd,UAAU,OAAO,OAAO,MAAM;QAChC;IACF,OAAO,IAAI,OAAO,QAChB,UAAU,OAAO,QAAQ;AAE7B;AACA,SAAS,eAAe,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACjF,IAAI,kBAAkB,QAAQ,IAAI,eAChC,OAAO;IAGT,uGAAuG;IACvG,IAAI,UAAU,WAAW,OAAO,OAAO,MAAM;IAC7C,IAAI,WAAW;IACf,MAAO,QAAQ,SAAS,EAAG;QACzB,IAAI,IAAI,QAAQ;QAChB,IAAI,IAAI,kBAAkB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE;QACtC,IAAI,GACF,+EAA+E;QAC/E,WAAW;aACN;YACL,yDAAyD;YACzD,IAAI,IAAI,WAAW,OAAO,OAAO,MAAM,CAAC,CAAC,EAAE;YAC3C,IAAI,EAAE,WAAW,GAAG;gBAClB,kFAAkF;gBAClF,WAAW;gBACX;YACF;YACA,QAAQ,QAAQ;QAClB;IACF;IACA,OAAO;AACT;AACA,SAAS,kBAAkB,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACpF,IAAI,UAAU,OAAO;IACrB,IAAI,CAAC,SACH;IAEF,IAAI,gBAAgB,CAAC,YAAY,CAAC,OAAO,cAAc,EAAE;QACvD,2EAA2E;QAC3E,yEAAyE;QACzE,IAAI,CAAC,OAAO,QACV,OAAO;QAET,OAAO,eAAe,OAAO,QAAQ,IAAI;IAC3C;IACA,IAAI,aAAa,CAAC,GAAG,EACnB,OAAO;IAET,aAAa,CAAC,GAAG,GAAG;IACpB,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,gBAAgB,KAAK;QAAC;QAAQ;KAAG;IACjC,IAAI,CAAC,UAAU,OAAO,OAAO,OAAO,IAAI,iBAAiB,QAAQ;QAC/D,eAAe,KAAK;YAAC;YAAQ;SAAG;QAChC,OAAO;IACT;AACF;AACA,SAAS,WAAW,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IACjD,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,OAAO,OAAO,CAAC,GAAG,GAAG,CAAC;IACtB,IAAI,UAAU,OAAO,KACnB,OAAO,IAAI,OAAO,OAAO,OAAO,CAAC,GAAG;IAEtC,IAAI,UAAU,OAAO,OAAO,OAAO,IAAI,kBAAkB,QACvD,OAAO,IAAI,kBAAkB,QAAQ,SAAU,EAAE;QAC/C,GAAG,OAAO,OAAO,CAAC,GAAG;IACvB;IAEF,OAAO,OAAO,KAAK,CAAC,GAAG;AACzB;AACA,SAAS,UAAU,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IAChD,sBAAsB;IACtB,OAAO;IAEP,6DAA6D;IAC7D,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,IAAI,UAAU,OAAO,OAAO,OAAO,IAAI,iBAAiB,QACtD,OAAO,IAAI,iBAAiB,QAAQ,SAAU,EAAE;QAC9C,IAAI,qBAAqB,GAAG;YAC1B,OAAO,WAAW,OAAO,OAAO,MAAM;QACxC;QACA,IAAI,sBAAsB,eAAe,QAAQ;YAC/C,mBAAmB,QAAQ,SAAU,CAAC;gBACpC,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;YACvB;YAEA,+BAA+B;YAC/B,eAAe,KAAK,MAAM,gBAAgB;QAC5C;IACF;AAEJ;;;AC3eA;AAEA,CAAA,GAAA,oCAAgB;;;;;uDCCH;AAHb;AACA;;AAEO,MAAM,oBAAoB;IAC/B,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAA,GAAA,8BAAa;AACxC;;;ACLA,QAAQ,iBAAiB,SAAU,CAAC;IAClC,OAAO,KAAK,EAAE,aAAa,IAAI;QAAC,SAAS;IAAC;AAC5C;AAEA,QAAQ,oBAAoB,SAAU,CAAC;IACrC,OAAO,eAAe,GAAG,cAAc;QAAC,OAAO;IAAI;AACrD;AAEA,QAAQ,YAAY,SAAU,MAAM,EAAE,IAAI;IACxC,OAAO,KAAK,QAAQ,QAAQ,SAAU,GAAG;QACvC,IAAI,QAAQ,aAAa,QAAQ,gBAAgB,KAAK,eAAe,MACnE;QAGF,OAAO,eAAe,MAAM,KAAK;YAC/B,YAAY;YACZ,KAAK;gBACH,OAAO,MAAM,CAAC,IAAI;YACpB;QACF;IACF;IAEA,OAAO;AACT;AAEA,QAAQ,SAAS,SAAU,IAAI,EAAE,QAAQ,EAAE,GAAG;IAC5C,OAAO,eAAe,MAAM,UAAU;QACpC,YAAY;QACZ,KAAK;IACP;AACF;;;;;sDCoBa;yDAgCA;oDA2FA;oDAkBA;AA/Lb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI,OAAO,KACT,OAAO,IAAI;AAGb,MAAM,cAAc,SAAU,OAAO,EAAE,MAAM;IAC3C,iCAAiC;IACjC,CAAA,GAAA,2BAAU,EAAE,cAAc;IAC1B,2CAA2C;IAC3C,CAAA,GAAA,2BAAU,EAAE,sBAAsB;AACpC;AAEA,MAAM,YAAY;IAChB,uFAAuF;IAEvF,qDAAqD;IACrD,MAAM,cAAc,OAAM;IAE1B,+BAA+B;IAC/B,YAAY,OAAM,gBAAgB;IAElC,4DAA4D;IAC5D,yBAAc,sBAAsB,YAAY;IAEhD,kEAAkE;IAClE,OAAM;IAEN,4BAA4B;IAC5B,6EAA6E;IAC7E,QAAQ,IACN,CAAC,EAAE,YAAY,KAAK,0CAA0C,EAAE,CAAA,GAAA,2BAAiB,EAAE,OAAM,eAAe,CAAC;IAE3G,gDAAgD;IAChD,yBAAc,sBAAsB,YAAY,MAAM,CAAA,GAAA,2BAAiB,EAAE,OAAM;IAC/E,OAAM,aAAa;IAEnB,oEAAoE;IACpE,CAAA,GAAA,uCAAmB;AACrB;AAEO,MAAM,mBAAmB,SAAU,SAAS,OAAM,aAAa;IACpE,wHAAwH;IACxH,6CAA6C;IAC7C,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,gDAAgD,CAAC;IAE5E,2EAA2E;IAC3E,yBAAc,qCAAqC,OAAO;IAE1D,oDAAoD;IACpD,OAAM,qBAAqB;IAE3B,8EAA8E;IAC9E,IAAI,OAAM,eAAe,WAAW,GAAG;QACrC,CAAA,GAAA,2BAAU,EAAE,cAAc,OAAM;QAChC,QAAQ,IACN,CAAC,iCAAiC,EAAE,OAAM,cAAc,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,OAAM,cAAc,CAAC,EAAE,CAAC,KAAK,qBAAqB,CAAC;QAE5H,kDAAkD;QAClD,QAAQ,IAAI;QACZ,CAAA,GAAA,oCAAe;QACf,EAAE;QAEF;IACF;IACA,+CAA+C;IAC/C,WAAW;QACT;QACA;IACF,GAAG;AACL;AAGO,MAAM,sBAAsB,SAAU,MAAM,EAAE,cAAc,IAAI;IACrE,gFAAgF;IAChF,CAAA,GAAA,2BAAU,EAAE,sBAAsB;IAElC,kDAAkD;IAClD,MAAM,eAAe,CAAA,GAAA,kBAAQ,EAAE,GAAG,CAAA,GAAA,kBAAQ,EAAE;IAC5C,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,IAAI,EAAE,OAAO,YAAY,SAAS,EAAE,aAAa,mBAAmB,CAAC;IAEhG,wFAAwF;IACxF,IAAI,gBAAgB,GAAG;QACrB,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,wBAAwB,CAAC;QACpD,yBAAc,8BAA8B,OAAO,MAAM;QACzD,OAAM;QACN,yDAAyD;QACzD,IAAI,CAAA,GAAA,mCAAyB,EAAE,QAAQ,cAAc;YACnD,QAAQ,IAAI,CAAC,QAAQ,EAAE,OAAO,KAAK,uCAAuC,EAAE,OAAO,KAAK,qBAAqB,CAAC;YAC9G,yBAAc,4BAA4B,OAAO,MAAM;YACvD;YACA;QACF;QACA,OAAM,aAAa;IACrB,OAAO,IAAI,eAAe,KAAK,gBAAgB,GAAG;QAChD,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,yBAAyB,CAAC;QACrD,yBAAc,8BAA8B,OAAO,MAAM;QACzD,WAAW;YACT,CAAA,GAAA,yCAAuB;QACzB,GAAG;QACH;IACF,OAAO,IAAI,eAAe,KAAK,gBAAgB,IAAI;QACjD,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,kBAAkB,CAAC;QAC9C,yBAAc,8BAA8B,OAAO,MAAM;QACzD,wCAAwC;QACxC,IAAI,CAAA,GAAA,mCAAyB,EAAE,QAAQ,QAAQ;YAC7C,QAAQ,IAAI,CAAC,QAAQ,EAAE,OAAO,KAAK,iCAAiC,EAAE,OAAO,KAAK,qBAAqB,CAAC;YACxG,yBAAc,4BAA4B,OAAO,MAAM;YACvD;YACA;QACF;QACA,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,gBAAgB,CAAC;QAC5C,OAAM,aAAa,QAAQ;IAC7B,OAAO,IAAI,eAAe,MAAM,gBAAgB,IAAI;QAClD,+GAA+G;QAC/G,IAAI,CAAA,GAAA,mCAAyB,EAAE,QAAQ,QAAQ;YAC7C,QAAQ,IAAI,CAAC,QAAQ,EAAE,OAAO,KAAK,iCAAiC,EAAE,OAAO,KAAK,qBAAqB,CAAC;YACxG,yBAAc,4BAA4B,OAAO,MAAM;YACvD;YACA;QACF;QACA,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,kBAAkB,CAAC;QAC9C,yBAAc,8BAA8B,OAAO,MAAM;QACzD,CAAA,GAAA,qCAAiB;QACjB;IACF,OAAO,IAAI,eAAe,MAAM,gBAAgB,IAAI;QAClD,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,yBAAyB,CAAC;QACrD,yBAAc,8BAA8B,OAAO,MAAM;QACzD,CAAA,GAAA,6CAAuB;QACvB;IACF,OAAO,IAAI,eAAe,MAAM,gBAAgB;QAC9C,8FAA8F;QAC9F,IAAI,aAAa;YACf,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,kBAAkB,CAAC;YAC9C,yBAAc,8BAA8B,OAAO,MAAM;YACzD,sEAAsE;YACtE,OAAM,0BAA0B;YAChC,OAAM,uBAAuB;YAC7B,CAAA,GAAA,iCAAiB,EAAE;YACnB;QACF,OAAO;YACL,QAAQ,IAAI;YACZ,oBAAoB,QAAQ;YAC5B;QACF;WACK;QACL,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,iBAAiB,CAAC;QAC7C,yBAAc,8BAA8B,OAAO,MAAM;QAEzD,yDAAyD;QACzD,IAAI,CAAA,GAAA,mCAAyB,EAAE,QAAQ,OAAO;YAC5C,QAAQ,IAAI,CAAC,OAAO,EAAE,OAAO,KAAK,gCAAgC,EAAE,OAAO,KAAK,qBAAqB,CAAC;YACtG,yBAAc,4BAA4B,OAAO,MAAM;YACvD;YACA;QACF;QAEA,OAAM,aAAa;IACrB;IAEA,gFAAgF;IAChF,WAAW,IAAM,eAAe,OAAM,gBAAgB;AACxD;AAEO,MAAM,iBAAiB;IAC5B,4DAA4D;IAC5D,IAAI,OAAM,yBAAyB;QACjC,kFAAkF;QAClF,wEAAwE;QACxE,QAAQ,IAAI;QACZ,yBAAc;QACd,CAAA,GAAA,wCAAoB;IACtB,OAAO;QACL,QAAQ,IAAI,CAAC,iBAAiB,EAAE,OAAM,cAAc,KAAK,kCAAkC,CAAC;QAC5F,8DAA8D;QAC9D,yBAAc,yBAAyB,OAAM,cAAc;QAC3D,iEAAiE;QACjE,gEAAgE;QAChE,oBAAoB,OAAM;IAC5B;AACF;AAEO,MAAM,iBAAiB,SAAU,OAAO,OAAM,eAAe;IAClE,6EAA6E;IAC7E,CAAA,GAAA,2BAAU,EAAE;IACZ,CAAA,GAAA,kCAAc;IACd,OAAM,2BAA2B;IACjC,4MAA4M;IAC5M;IACA;AACF;;;;;oDClLW;mDACA;mDACA;0DACA;qDACA;gEAUE;uDAWA;iEAaA;wDAOA;yDAWA;+DAMA;0DAUA;kDAMA;2DAuBA;kEAMA;uEAMA;uEAKA;+DAMA;qDAMA;4DAIA;8CAUA;mDAOA;AA1Kb;AAFA;AAIA,oBAAoB;AACpB,iEAAiE;AACjE,qGAAqG;AACrG,6GAA6G;AAC7G,0GAA0G;AAC1G,4GAA4G;AAC5G,wGAAwG;AACxG,KAAK;AACL,MAAM,UAAU;IACd;QAAE,QAAQ;QAAG,MAAM;QAAI,OAAO;QAAM,QAAQ;IAAM;IAClD;QAAE,QAAQ;QAAG,MAAM;QAAW,aAAa;QAAQ,OAAO;QAAQ,OAAO;QAAO,QAAQ;IAAM;IAC9F;QAAE,QAAQ;QAAG,MAAM;QAAe,aAAa;QAAY,OAAO;QAAQ,OAAO;QAAO,QAAQ;IAAM;IACtG;QAAE,QAAQ;QAAG,MAAM;QAAY,aAAa;QAAQ,OAAO;QAAQ,OAAO;QAAO,QAAQ;IAAM;IAC/F;QAAE,QAAQ;QAAG,MAAM;QAAW,aAAa;QAAW,OAAO;QAAQ,OAAO;QAAO,QAAQ;IAAM;IACjG;QAAE,QAAQ;QAAG,MAAM;QAAU,aAAa;QAAW,OAAO;QAAQ,OAAO;QAAO,QAAQ;IAAM;CACjG;AAEM,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AAEX,MAAM,wBAAwB,SAAU,KAAK;IAC3C,IAAI,oBAAoB,OACtB;SAEA,kBAAkB;AAEtB;AAEO,MAAM,6BAA6B,SAAU,KAAK;IACvD,iBAAiB,EAAE;IACnB,QAAQ,QAAQ,CAAC,KAAO,eAAe,KAAK;IAC5C,6EAA6E;IAC7E,sBAAsB;IACtB,iEAAiE;IACjE,cAAc,CAAC,EAAE,CAAC,OAAO;IACzB,QAAQ,IAAI,gEAA6D,cAAc,CAAC,EAAE,CAAC;IAC3F,QAAQ,IAAI,gEAA6D;AAC3E;AAEO,MAAM,oBAAoB;IAC/B,+HAA+H;IAC/H,IAAI,qBAAqB,CAAA,GAAA,kBAAQ,EAAE,GAAG,eAAe,SAAS;IAE9D,mGAAmG;IACnG,gBAAgB;IAEhB,mCAAmC;IACnC,gBAAgB,cAAc,CAAC,mBAAmB;IAClD,QAAQ,IAAI,CAAC,wBAAwB,EAAE,cAAc,KAAK,CAAC;IAC3D,OAAO;AACT;AAEO,MAAM,8BAA8B;IACzC,IAAI,qBAAqB,CAAA,GAAA,kBAAQ,EAAE,GAAG,eAAe,SAAS;IAC9D,mCAAmC;IACnC,gBAAgB,cAAc,CAAC,mBAAmB;IAClD,OAAO;AACT;AAEO,MAAM,qBAAqB,SAAU,SAAS,EAAE;IACrD,uFAAuF;IACvF,MAAM,eAAe,eAAe,OAAO,CAAC,KAAO,OAAO;IAE1D,wJAAwJ;IACxJ,0EAA0E;IAC1E,IAAI,mBAAmB,CAAA,GAAA,kBAAQ,EAAE,IAAI,aAAa,SAAS;IAC3D,gBAAgB,YAAY,CAAC,iBAAiB;IAC9C,OAAO;AACT;AAEO,MAAM,sBAAsB,SAAU,IAAI;IAC/C,gBAAgB,eAAe,KAAK,CAAC,SAAW,OAAO,SAAS;IAChE,QAAQ,IAAI,sBAAsB;IAClC,OAAO;AACT;AAEO,MAAM,4BAA4B;IACvC,8DAA8D;IAC9D,MAAM,QAAQ,CAAA,GAAA,kBAAQ,EAAE,GAAG;IAC3B,IAAI,UAAU,GACZ,gBAAgB;SAEhB,gBAAgB;AAEpB;AAEO,MAAM,uBAAuB,SAAU,MAAM;IAClD,MAAM,qBAAqB,eAAe,QAAQ;IAClD,eAAe,OAAO,oBAAoB;IAC1C,QAAQ,IAAI,sCAAsC;AACpD;AAEO,MAAM,eAAe,SAAU,MAAM,EAAE,YAAY,CAAC;IACzD,MAAM,uBAAuB,eAAe,QAAQ;IACpD,QAAQ,IAAI,YAAY,QAAQ,6BAA6B,sBAAsB,eAAe;IAClG,QAAQ,IAAI,CAAC,8BAA8B,EAAE,UAAU,qBAAqB,EAAE,cAAc,CAAC;IAE7F,0EAA0E;IAC1E,IAAI,kBAAkB;QACpB,IAAI,uBAAuB,aAAa,GACtC,gBAAgB,cAAc,CAAC,uBAAuB,UAAU;aAEhE,gBAAgB,cAAc,CAAC,eAAe,SAAS,YAAY,qBAAqB;WAErF,IAAI,kBAAkB;QAC3B,IAAI,uBAAuB,aAAa,eAAe,SAAS,GAC9D,gBAAgB,cAAc,CAAC,uBAAuB,UAAU;aAEhE,gBAAgB,cAAc,CAAC,YAAa,CAAA,eAAe,SAAS,oBAAmB,EAAG;;IAG9F,QAAQ,IAAI;IACZ,QAAQ,IAAI,sCAAmC,cAAc,MAAM,0BAA0B,cAAc;AAC7G;AAEO,MAAM,wBAAwB;IACnC,IAAI,cAAc,OAChB,OAAO;AAEX;AAEO,MAAM,+BAA+B;IAC1C,sCAAsC;IACtC,kBAAkB,SAAU,gBAAgB,UAAY,gBAAgB;IACxE,QAAQ,IAAI,2BAA2B;AACzC;AAEO,MAAM,oCAAoC;IAC/C,qEAAqE;IACrE,OAAO,CAAA,GAAA,wBAAc,EAAE,eAAe,gBAAgB;AACxD;AAEO,MAAM,oCAAoC;IAC/C,mEAAmE;IAEnE,OAAO,CAAA,GAAA,wBAAc,EAAE,eAAe,gBAAgB;AACxD;AAEO,MAAM,4BAA4B,SAAU,GAAG;IACpD,mGAAmG;IACnG,eAAe,KAAK,CAAC,SAAW,OAAO,WAAW,IAAI,QAAQ,SAAS;IACvE,QAAQ,IAAI,qEAA6B;AAC3C;AAEO,MAAM,kBAAkB;IAC7B,eAAe,QAAQ,CAAC,SAAY,OAAO,SAAS;AACtD;AAEO,MAAM,yBAAyB,SAAU,SAAS,OAAO;IAC9D,uEAAuE;IACvE,IAAI,WAAW,SAAS;QACtB,QAAQ,IAAI;QACZ,uBAAuB,eAAe,KAAK,CAAC,MAAQ,IAAI,UAAU;IACpE,OACE,uBAAuB;AAE3B;AAEO,MAAM,WAAW;IACtB,4CAA4C;IAC5C,uBAAuB;IACvB,2CAA2C;IAC3C;AACF;AAEO,MAAM,gBAAgB,SAAU,IAAI;IACzC,OAAO,eAAe,KAAK,CAAC,SAAW,OAAO,SAAS;AACzD;;;;;+CC5Ka;+CAIA;+EAMA;gEAwCA;wDAYA;qDAWA;qDAkBA;wDA4CA;wDAKA;AA9Ib;AAEO,MAAM,YAAY,SAAU,GAAG,EAAE,GAAG;IACzC,OAAO,KAAK,MAAM,KAAK,WAAY,CAAA,MAAM,GAAE,IAAK,KAAK;AACvD;AAEO,MAAM,YAAY,SAAU,aAAa;IAC9C,IAAI,cAAc,gBAAgB,YAAY,OAAO;IACrD,IAAI,cAAc,gBAAgB,WAAW,OAAO;IACpD,IAAI,cAAc,gBAAgB,QAAQ,OAAO;AACnD;AAEO,MAAM,4CAA4C,SAAU,WAAU,EAAE,aAAa;IAC1F,IAAI,gBAAe,QAAQ,gBAAe,OAAO;QAC/C,IAAI,cAAc,UAAU,OAC1B,OAAO;aACF,IAAI,cAAc,UAAU,WACjC,OAAO;IAEX,OAAO,IAAI,cAAc,UAAU,QACjC,OAAO;IAET,IAAI,gBAAe,eAAe,gBAAe,OAAO;QACtD,IAAI,cAAc,UAAU,OAC1B,OAAO;aACF,IAAI,cAAc,UAAU,WACjC,OAAO;IAEX,OAAO,IAAI,cAAc,UAAU,QACjC,OAAO;IAET,IAAI,gBAAe,cAAc;QAC/B,IAAI,cAAc,UAAU,OAC1B,OAAO;aACF,IAAI,cAAc,UAAU,WACjC,OAAO;aACF,IAAI,cAAc,UAAU,QACjC,OAAO;IAEX;IACA,IAAI,gBAAe,4BAA4B,gBAAe,QAAQ;QACpE,IAAI,cAAc,UAAU,OAC1B,OAAO;aACF,IAAI,cAAc,UAAU,WACjC,OAAO;IAEX,OAAO,IAAI,cAAc,UAAU,QACjC,OAAO;AAEX;AAGO,MAAM,6BAA6B,SAAU,SAAS,CAAA,GAAA,oBAAY,CAAC,EAAE,OAAO,UAAU;IAC3F,MAAM,MAAM,0CAA0C,MAAM;IAC5D,MAAM,OAAO,UAAU,GAAG;IAC1B,QAAQ,IAAI,CAAC,oBAAoB,EAAE,OAAO,KAAK,UAAU,EAAE,KAAK,uBAAuB,CAAC;IACxF,IAAI,OAAO,IACT,OAAO;SAEP,OAAO;AAEX;AAGO,MAAM,qBAAqB,SAAU,oBAAoB,EAAE,IAAI;IACpE,QAAQ,IAAI,CAAC,EAAE,qBAAqB,KAAK,kBAAkB,EAAE,KAAK,CAAC,CAAC;IAEpE,IAAI,2BAA2B,sBAAsB,2BAA2B;QAC9E,QAAQ,IAAI,CAAC,EAAE,qBAAqB,KAAK,iCAAiC,EAAE,KAAK,CAAC,CAAC;QACnF,OAAO;IACT,OACE,OAAO;AAEX;AAEO,MAAM,kBAAkB,SAAU,aAAa,EAAE,cAAc,EAAE,aAAa;IACnF,MAAM,uBAAuB,eAAe,QAAQ;IACpD,IAAI,kBAAkB,QAAQ;QAC5B,IAAI,wBAAwB,GAC1B,OAAO;YAAC,cAAc,CAAC,uBAAuB,EAAE;YAAE,cAAc,CAAC,uBAAuB,EAAE;SAAC;QAC7F,IAAI,yBAAyB,GAC3B,OAAO;YAAC,cAAc,CAAC,uBAAuB,EAAE;YAAE,cAAc,CAAC,eAAe,SAAS,EAAE;SAAC;QAC9F,IAAI,yBAAyB,GAC3B,OAAO;YAAC,cAAc,CAAC,eAAe,SAAS,EAAE;YAAE,cAAc,CAAC,eAAe,SAAS,EAAE;SAAC;IACjG,OAAO;QACL,IAAI,wBAAwB,eAAe,SAAS,GAClD,OAAO;YAAC,cAAc,CAAC,uBAAuB,EAAE;YAAE,cAAc,CAAC,uBAAuB,EAAE;SAAC;QAC7F,IAAI,yBAAyB,eAAe,SAAS,GACnD,OAAO;YAAC,cAAc,CAAC,uBAAuB,EAAE;YAAE,cAAc,CAAC,EAAE;SAAC;QACtE,IAAI,yBAAyB,eAAe,SAAS,GAAG,OAAO;YAAC,cAAc,CAAC,EAAE;YAAE,cAAc,CAAC,EAAE;SAAC;IACvG;AACF;AAEO,MAAM,kBAAkB,SAAU,aAAa,EAAE,cAAc,EAAE,aAAa;IACnF,MAAM,uBAAuB,eAAe,QAAQ;IAEpD,IAAI,kBAAkB,QAAQ;QAC5B,IAAI,wBAAwB,GAC1B,OAAO;YACL,cAAc,CAAC,uBAAuB,EAAE;YACxC,cAAc,CAAC,uBAAuB,EAAE;YACxC,cAAc,CAAC,uBAAuB,EAAE;SACzC;QACH,IAAI,yBAAyB,GAC3B,OAAO;YACL,cAAc,CAAC,uBAAuB,EAAE;YACxC,cAAc,CAAC,uBAAuB,EAAE;YACxC,cAAc,CAAC,eAAe,SAAS,EAAE;SAC1C;QACH,IAAI,yBAAyB,GAC3B,OAAO;YACL,cAAc,CAAC,uBAAuB,EAAE;YACxC,cAAc,CAAC,eAAe,SAAS,EAAE;YACzC,cAAc,CAAC,eAAe,SAAS,EAAE;SAC1C;QACH,IAAI,yBAAyB,GAC3B,OAAO;YACL,cAAc,CAAC,eAAe,SAAS,EAAE;YACzC,cAAc,CAAC,eAAe,SAAS,EAAE;YACzC,cAAc,CAAC,eAAe,SAAS,EAAE;SAC1C;IACL,OAAO;QACL,IAAI,wBAAwB,eAAe,SAAS,GAClD,OAAO;YACL,cAAc,CAAC,uBAAuB,EAAE;YACxC,cAAc,CAAC,uBAAuB,EAAE;YACxC,cAAc,CAAC,uBAAuB,EAAE;SACzC;QACH,IAAI,yBAAyB,eAAe,SAAS,GACnD,OAAO;YAAC,cAAc,CAAC,uBAAuB,EAAE;YAAE,cAAc,CAAC,uBAAuB,EAAE;YAAE,cAAc,CAAC,EAAE;SAAC;QAChH,IAAI,yBAAyB,eAAe,SAAS,GACnD,OAAO;YAAC,cAAc,CAAC,uBAAuB,EAAE;YAAE,cAAc,CAAC,EAAE;YAAE,cAAc,CAAC,EAAE;SAAC;QACzF,IAAI,yBAAyB,eAAe,SAAS,GACnD,OAAO;YAAC,cAAc,CAAC,EAAE;YAAE,cAAc,CAAC,EAAE;YAAE,cAAc,CAAC,EAAE;SAAC;IACpE;AACF;AAEO,MAAM,qBAAqB,SAAU,aAAa;IACvD,IAAI,kBAAkB,QAAQ,OAAO;IACrC,IAAI,kBAAkB,SAAS,OAAO;AACxC;AAEO,MAAM,qBAAqB;IAChC,OAAO,UAAU,GAAG,KAAK;AAC3B;;;AChJA,oFAAoF;;;oDAGvE;2DAIA;2DAIA;mEAIA;iEAIA;0EAIA;8DAIA;8DAIA;oEAIA;sFAIA;iEAIA;qDAIA;yDAIA;2DAOA;6DAQA;oDAOA;2DAIA;+DAIA;wDAIA;AApFb;;AAEO,MAAM,iBAAiB;IAC5B,CAAA,GAAA,2BAAU,EAAE,aAAa,4CAA4C;AACvE;AAEO,MAAM,wBAAwB,SAAU,IAAI;IACjD,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,MAAM,EAAE,KAAK,6BAA6B,CAAC,EAAE;AACzE;AAEO,MAAM,wBAAwB,SAAU,IAAI,EAAE,SAAS;IAC5D,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,MAAM,EAAE,KAAK,0CAA0C,EAAE,UAAU,CAAC,EAAE;AAClG;AAEO,MAAM,gCAAgC,SAAU,IAAI,EAAE,IAAI;IAC/D,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,GAAG,EAAE,KAAK,sBAAsB,EAAE,KAAK,CAAC,EAAE;AACtE;AAEO,MAAM,8BAA8B,SAAU,IAAI,EAAE,IAAI;IAC7D,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,MAAM,EAAE,KAAK,uDAAuD,EAAE,KAAK,CAAC,EAAE;AAC1G;AAEO,MAAM,uCAAuC,SAAU,IAAI;IAChE,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,MAAM,EAAE,KAAK,mCAAmC,CAAC,EAAE;AAC/E;AAEO,MAAM,2BAA2B;IACtC,CAAA,GAAA,2BAAU,EAAE,aAAa,+CAAkC;AAC7D;AAEO,MAAM,2BAA2B,SAAU,IAAI;IACpD,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,yBAAyB,EAAE,KAAK,kCAAkC,CAAC,EAAE;AACjG;AAEO,MAAM,iCAAiC,SAAU,IAAI,EAAE,KAAK;IACjE,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,KAAK,EAAE,KAAK,iBAAiB,EAAE,MAAM,CAAC,EAAE;AACpE;AAEO,MAAM,mDAAmD,SAAU,IAAI;IAC5E,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,EAAE,KAAK,+DAA+D,CAAC,EAAE;AACrG;AAEO,MAAM,8BAA8B,SAAU,gBAAgB,EAAE,gBAAgB,EAAE,KAAK;IAC5F,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,EAAE,iBAAiB,UAAU,EAAE,iBAAiB,iBAAiB,EAAE,MAAM,CAAC,EAAE;AACxG;AAEO,MAAM,kBAAkB,SAAU,iBAAiB,EAAE,gBAAgB;IAC1E,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,EAAE,kBAAkB,oBAAoB,EAAE,iBAAiB,CAAC,EAAE;AAC1F;AAEO,MAAM,sBAAsB,SAAU,gBAAgB,EAAE,iBAAiB;IAC9E,CAAA,GAAA,2BAAU,EAAE,aACV,CAAC,EAAE,iBAAiB,iBAAiB,EAAE,kBAAkB,iCAAiC,CAAC,EAC3F;AAEJ;AAEO,MAAM,wBAAwB,SAAU,mBAAmB,EAAE,oBAAoB;IACtF,CAAA,GAAA,2BAAU,EAAE,aACV,CAAC,KAAK,EAAE,oBAAoB,qDAAqD,EAAE,qBAAqB,CAAC,EACzG;IAEF,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,mBAAmB,EAAE,qBAAqB,oBAAoB,CAAC,EAAE;AAC7F;AAEO,MAAM,0BAA0B,SAAU,mBAAmB,EAAE,oBAAoB,EAAE,wBAAwB;IAClH,CAAA,GAAA,2BAAU,EAAE,aACV,CAAC,QAAQ,EAAE,oBAAoB,2DAA2D,EAAE,qBAAqB,mBAAmB,EAAE,yBAAyB,CAAC,EAChK;AAEJ;AAEO,MAAM,iBAAiB,SAAU,MAAM,EAAE,OAAO,OAAO;IAC5D,CAAA,GAAA,2BAAU,EAAE,aAAa,QAAQ;AACnC;AAEO,MAAM,wBAAwB,SAAU,IAAI;IACjD,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,4BAA4B,EAAE,KAAK,CAAC,EAAE;AAClE;AAEO,MAAM,4BAA4B,SAAU,IAAI;IACrD,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,kCAAkC,EAAE,KAAK,CAAC,EAAE;AACxE;AAEO,MAAM,qBAAqB,SAAU,GAAG;IAC7C,CAAA,GAAA,2BAAU,EAAE,aAAa,CAAC,iDAAiD,EAAE,IAAI,CAAC,EAAE;AACtF;;;;;ACvFA,MAAM;IACJ,cAAc,GAAG;IACjB,kBAAkB,SAAS,cAAc,kBAAkB;IAE3D,sBAAsB,aAAa,EAAE;QACnC,SAAS,iBAAiB,iBAAiB,QAAQ,CAAC;YAClD,IAAI,UAAU,OAAO;QACvB;QACA,SAAS,cAAc,CAAC,eAAe,EAAE,cAAc,OAAO,CAAC,EAAE,UAAU,IAAI;IACjF;IAEA,cAAc,cAAc,EAAE;QAC5B,IAAI,CAAC,cAAc,SAAS,cAAc;QAE1C,IAAI,OAAO;QAEX,4HAA4H;QAC5H,MAAM,gBAAgB,EAAE;QACxB,eAAe,QAAQ,CAAC;YACtB,cAAc,KAAK;QACrB;QAEA,cAAc,UAAU,QAAQ,CAAC,IAAI;YACnC,OACE,OACA,CAAC;qBACY,EAAE,GAAG,KAAK,uBAAuB,EAAE,IAAI,EAAE;uDACP,EAAE,GAAG,OAAO;0CACzB,EAAE,GAAG,KAAK;;MAE9C,CAAC;QACH;QACA,IAAI,CAAC,YAAY,YAAY;IAC/B;IAEA,aAAa,gBAAgB,EAAE,IAAI,EAAE;QACnC,MAAM,OAAO,CAAC,0BAA0B,EAAE,KAAK,GAAG,EAAE,iBAAiB,IAAI,CAAC;QAC1E,IAAI,CAAC,gBAAgB,mBAAmB,cAAc;IACxD;IAEA,cAAc;QACZ,IAAI,CAAC,gBAAgB,YAAY;IACnC;IAEA,8BAA8B,OAAO,EAAE,IAAI,EAAE;QAC3C,6FAA6F;QAC7F,wGAAwG;QAExG,MAAM,iBAAiB,SAAU,KAAK;YACpC,MAAM;YACN,IAAI,MAAM,OAAO,UAAU,SAAS,WAAW;gBAC7C,QAAQ,MAAM,OAAO,QAAQ,MAAM;gBACnC,SAAS,cAAc,kBAAkB,oBAAoB,SAAS;YACxE;YACA,qHAAqH;YACrH,IAAI,MAAM,OAAO,UAAU,SAAS,UAAU;gBAC5C,QAAQ,MAAM,OAAO,WAAW,QAAQ,MAAM;gBAC9C,SAAS,cAAc,kBAAkB,oBAAoB,SAAS;YACxE;QACF;QACA,SAAS,cAAc,kBAAkB,iBAAiB,SAAS;IACrE;AACF;kBAEe,IAAI;;;;;kEC1CR;0DAgHE;2DAKA;8DAqFA;8DAQA;uEAKA;gEAKA;+EAYA;qDAKA;6DAIA;4DAiBA;wDAIA;wDAMA;6DAKA;AArSb;AACA;AACA;;AACA;;AAEA;AACA;AACA;AAOA;AACA;AACA;AACA;AAnBA;AAqBA,IAAI;AACG,IAAI;AAEX,yEAAyE;AACzE,MAAM,iBAAiB,SAAU,SAAS;IACxC,IAAI,cAAc,SAAM,eAAe;QACrC,uDAAuD;QACvD,QAAQ,IAAI;QACZ,2BAAc,sBAAsB;QACpC,SAAM,aAAa,SAAM;QACzB,WAAW;YACT,CAAA,GAAA,qCAAkB,EAAE,SAAM;QAC5B,GAAG;IACL,OAAO;QACL,8BAA8B;QAC9B,2BAAc,0BAA0B;QACxC,QAAQ,IAAI;QACZ,CAAA,GAAA,qCAAc;IAChB;AACF;AAEA,MAAM,wCAAwC,SAAU,YAAY;IAClE,IAAI,aAAa,WAAW,SAAM,cAAc,QAC9C,OAAO;SAEP,OAAO;AAEX;AAEA,wEAAwE;AACxE,6BAA6B;AAC7B,8CAA8C;AAC9C,iDAAiD;AACjD,MAAM,oCAAoC;IACxC,QAAQ,IAAI;IACZ,2BAAc,eAAe;IAC7B,2BAAc,0BAA0B;IACxC,QAAQ,IAAI;IACZ,CAAA,GAAA,mCAAiB;IACjB,CAAA,GAAA,qCAAc;AAChB;AAEA,MAAM,4BAA4B,SAAU,UAAU,EAAE,IAAI;IAC1D,8DAA8D;IAC9D,CAAA,GAAA,6BAAU,EAAE;IACZ,gIAAgI;IAChI,IAAI,SAAS,OAAO;QAClB,mHAAmH;QACnH,IAAI,eAAe,KAAK;YACtB,8EAA8E;YAC9E,QAAQ,IAAI;YACZ,2BAAc,sBAAsB;YACpC,SAAM;YACN,SAAM,aAAa,SAAM;YACzB,WAAW;gBACT,CAAA,GAAA,qCAAkB,EAAE,SAAM;YAC5B,GAAG;QACL,OAAO,IAAI,eAAe,aAAa;YACrC,MAAM,MAAM;YACZ,eAAe;QACjB,OAAO,IAAI,eAAe,cAAc;YACtC,MAAM,MAAM;YACZ,eAAe;QACjB,OAAO,IAAI,eAAe,KAAK;YAC7B,QAAQ,IAAI;YACZ,2BAAc,sBAAsB;YACpC,WAAW;gBACT,CAAA,GAAA,2CAAuB;YACzB,GAAG;QACL,OAAO,IAAI,eAAe,KAAK;YAC7B,QAAQ,IAAI;YACZ,2BAAc,sBAAsB;YACpC,SAAM,aAAa,SAAM,eAAe;YACxC,WAAW;gBACT,CAAA,GAAA,qCAAkB,EAAE,SAAM;YAC5B,GAAG;QACL,OAAO,IAAI,eAAe,KAAK;YAC7B,QAAQ,IAAI;YACZ,2BAAc,sBAAsB;YACpC;QACA,2CAA2C;QAC7C,OAAO,IAAI,eAAe,KAAK;YAC7B,QAAQ,IAAI;YACZ,2BAAc,sBAAsB;YACpC,WAAW;gBACT,CAAA,GAAA,+CAAuB;YACzB,GAAG;QACL,OAAO;YACL,QAAQ,IAAI,CAAC,0CAA0C,EAAE,WAAW,CAAC;YACrE,2BAAc,mBAAmB;YACjC,QAAQ,IAAI;YACZ,CAAA,GAAA,qCAAc;QAChB;IACF,OAAO,IAAI,SAAS,SAAS;QAC3B,QAAQ,IAAI,CAAC,2BAA2B,EAAE,WAAW,CAAC;QACtD,2BAAc,eAAe,CAAC,2BAA2B,EAAE,WAAW,CAAC;QACvE,wGAAwG;QACxG,SAAM,0BAA0B,SAAM;QACtC,MAAM,eAAe,SAAM,cAAc;QACzC,+DAA+D;QAC/D,IAAI,sCAAsC,eAAe;YACvD;YACA;QACF;QACA,QAAQ,IAAI,4BAA4B,SAAM;QAC9C,CAAA,GAAA,kCAAgB,EAAE;QAClB,SAAM;QACN,WAAW;YACT,CAAA,GAAA,gCAAc,EAAE;QAClB,GAAG;IACL;AACF;AAEO,MAAM,uBAAuB;IAClC,2BAA2B;IAC3B,CAAA,GAAA,6BAAU,EAAE;AACd;AAEO,MAAM,wBAAwB;IACnC,CAAA,GAAA,6BAAU,EAAE,sBAAsB,SAAM;IACxC,qEAAqE;IACrE,CAAA,GAAA,6BAAU,EAAE;IACZ,CAAA,GAAA,6BAAU,EAAE,2BAA2B;AACzC;AAEA,mEAAmE;AACnE,MAAM,iCAAiC,SAAU,UAAU,EAAE,mBAAmB;IAC9E,8DAA8D;IAC9D,CAAA,GAAA,6BAAU,EAAE;IAEZ,6CAA6C;IAC7C,IAAI,eAAe,KAAK;QACtB,QAAQ,IAAI;QACZ,2BAAc,sBAAsB;QACpC,yCAAyC;QACzC,IAAI,CAAC,cAAc;YACjB,QAAQ,IACN,CAAC,EAAE,mBAAmB,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,mBAAmB,CAAC,EAAE,CAAC,KAAK,8CAA8C,CAAC;YAEjH,qHAAqH;YACrH,IAAI,mBAAmB,CAAC,EAAE,CAAC,OAAO;gBAChC,kCAAkC;gBAClC,qIAAqI;gBACrI,2BAAc,+BAA+B,mBAAmB,CAAC,EAAE,CAAC,MAAM;YAC5E,OAAO;gBACL,2BAAc,+BAA+B,mBAAmB,CAAC,EAAE,CAAC,MAAM;gBAC1E,CAAA,GAAA,8CAA0B,EAAE,mBAAmB,CAAC,EAAE;YACpD;QACF,OAAO,IAAI,cAAc;YACvB,6CAA6C;YAC7C,QAAQ,IAAI,CAAC,EAAE,mBAAmB,CAAC,EAAE,CAAC,KAAK,0BAA0B,CAAC;YACtE,QAAQ,IAAI,CAAC,EAAE,mBAAmB,CAAC,EAAE,CAAC,KAAK,WAAW,CAAC;YACvD,2BAAc,4BAA4B,mBAAmB,CAAC,EAAE,CAAC,MAAM;YACvE,CAAA,GAAA,kCAAe,EAAE,mBAAmB,CAAC,EAAE;YACvC;QACF;IACA,+BAA+B;IACjC,OAAO;QACL,QAAQ,IAAI;QACZ,2BAAc,0BAA0B;QACxC,QAAQ,IAAI;QACZ,CAAA,GAAA,qCAAc;IAChB;AACF;AAEA,MAAM,0CAA0C,SAAU,UAAU,EAAE,KAAK;IACzE,IACE,AAAC,UAAU,KAAK,eAAe,OAC9B,UAAU,KAAK,eAAe,OAC9B,UAAU,KAAK,eAAe,KAE/B,OAAO;AAEX;AAEA,MAAM,iCAAiC,SAAU,UAAU;IACzD,6DAA6D;IAC7D,CAAA,GAAA,6BAAU,EAAE;IAEZ,qHAAqH;IACrH,MAAM,QAAQ,CAAA,GAAA,uCAAe,EAAE,UAAU,CAAC,SAAW,OAAO,UAAU;IAEtE,4DAA4D;IAC5D,4CAA4C;IAC5C,IAAI,wCAAwC,YAAY,QAAQ;QAC9D,QAAQ,IAAI;QACZ,2BAAc,sBAAsB;QACpC,IAAI,UAAU,GACZ,yGAAyG;QACzG,CAAA,GAAA,iDAAyB,EAAE,CAAA,GAAA,uCAAe,CAAC,CAAC,EAAE;aAE9C,CAAA,GAAA,sCAAc,EAAE,CAAA,GAAA,uCAAe,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAA,GAAA,8BAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,QAAQ;IAE7E,OAAO;QACL,+CAA+C;QAC/C,QAAQ,IAAI;QACZ,2BAAc,0BAA0B;QACxC,QAAQ,IAAI;QACZ,CAAA,GAAA,qCAAc;IAChB;AACF;AAGO,MAAM,2BAA2B,SAAU,KAAK,EAAE,0BAA0B;IACjF,yEAAyE;IACzE,eAAe;IACf,CAAA,GAAA,6BAAU,EAAE;IACZ,CAAA,GAAA,6BAAU,EAAE,gCAAgC,gCAAgC;AAC9E;AAGO,MAAM,2BAA2B,SAAU,MAAM;IACtD,CAAA,GAAA,6BAAU,EAAE,sBAAsB;IAClC,CAAA,GAAA,6BAAU,EAAE,gCAAgC;AAC9C;AAEO,MAAM,oCAAoC,SAAU,IAAI;IAC7D,CAAA,GAAA,6BAAU,EAAE;IACZ,CAAA,GAAA,6BAAU,EAAE,8BAA8B,CAAA,GAAA,6BAAS,GAAG;AACxD;AAEO,MAAM,6BAA6B,SAAU,OAAO,EAAE,KAAK;IAChE,CAAA,GAAA,6BAAU,EAAE;IACZ,IAAI,SACF;SACK;QACL,QAAQ,IAAI,CAAC,oBAAoB,EAAE,MAAM,CAAC;QAC1C,2BAAc,0BAA0B;QACxC,QAAQ,IAAI;QACZ,CAAA,GAAA,qCAAc;IAChB;AACF;AAEO,MAAM,4CAA4C,SAAU,KAAK;IACtE,CAAA,GAAA,6BAAU,EAAE,uBAAuB;IACnC,CAAA,GAAA,6BAAU,EAAE,2BAA2B,4BAA4B;AACrE;AAEO,MAAM,kBAAkB;IAC7B,+BAA+B;AACjC;AAEO,MAAM,0BAA0B,SAAU,GAAG;IAClD,CAAA,GAAA,6BAAU,EAAE;IACZ,IAAI,QAAQ,KAAK;QACf,QAAQ,IAAI;QACZ,2BAAc,sBAAsB;QACpC,yFAAyF;QACzF,SAAM,oBAAoB,CAAC,EAAE,SAAM,gBAAgB,CAAC;QACpD,QAAQ,IAAI;QACZ;IACF,OAAO;QACL,QAAQ,IAAI;QACZ,2BAAc,0BAA0B;QACxC,QAAQ,IAAI;QACZ,CAAA,GAAA,qCAAc;IAChB;AACF;AAEO,MAAM,yBAAyB;IACpC,CAAA,GAAA,mCAAiB,EAAE,SAAM;AAC3B;AAEO,MAAM,qBAAqB;IAChC,CAAA,GAAA,6BAAU,EAAE;IACZ,MAAM,eAAe,CAAA,GAAA,6BAAiB;IACtC,CAAA,GAAA,6BAAU,EAAE,0BAA0B,yBAAyB,wBAAwB;AACzF;AAEO,MAAM,qBAAqB;IAChC,CAAA,GAAA,6BAAU,EAAE;IACZ,CAAA,GAAA,6BAAU,EAAE,8BAA8B;AAC5C;AAEO,MAAM,0BAA0B,SAAU,IAAI;IACnD,sCAAsC;IACtC,CAAA,GAAA,6BAAU,EAAE;IAEZ,QAAQ,IAAI,CAAC,2BAA2B,EAAE,KAAK,CAAC;IAChD,2BAAc,eAAe,CAAC,2BAA2B,EAAE,KAAK,CAAC;IACjE,+FAA+F;IAC/F,MAAM,eAAe,SAAM,cAAc;IAEzC,+DAA+D;IAC/D,IAAI,sCAAsC,eAAe;QACvD;QACA;IACF;IAEA,uEAAuE;IACvE,IAAI,CAAA,GAAA,2BAAS,MAAM,SAAM,eAAe,SAAS,GAAG;QAClD,QAAQ,IAAI;QACZ,2BAAc,eAAe;QAC7B,CAAA,GAAA,wBAAM,EAAE,SAAM,eAAe;QAC7B;IACF;IAEA,8DAA8D;IAE9D,IAAI,aAAa,QAAQ;QACvB,QAAQ,IAAI,CAAC,EAAE,KAAK,iBAAiB,CAAC;QACtC,2BAAc,eAAe;QAC7B,2BAAc,0BAA0B;QACxC,QAAQ,IAAI;QACZ,CAAA,GAAA,mCAAiB;QACjB,CAAA,GAAA,qCAAc;IAChB,OAAO;QACL,QAAQ,IAAI,CAAC,EAAE,KAAK,yBAAyB,CAAC;QAC9C,2BAAc,eAAe;QAC7B,2BAAc,sBAAsB;QACpC,+DAA+D;QAC/D,CAAA,GAAA,kCAAgB,EAAE;QAClB,WAAW;YACT,CAAA,GAAA,gCAAc,EAAE;QAClB,GAAG;IACL;AACF;;;;;ACjVA,MAAM;IACJ,aAAc;QACZ,IAAI,CAAC,eAAe,SAAS,cAAc;IAC7C;IAEA,oBAAoB;QAClB,IAAI,CAAC,aAAa,YAChB;IACJ;IAEA,wBAAwB;QACtB,IAAI,CAAC,aAAa,YAAY;IAChC;IAEA,sBAAsB,MAAM,EAAE;QAC5B,IAAI,CAAC,aAAa,YAAY,CAAC,mBAAmB,EAAE,OAAO,uIAAuI,CAAC;IACrM;IAEA,4BAA4B;QAC1B,IAAI,CAAC,aAAa,YAChB;IACJ;IAEA,uBAAuB,KAAK,EAAE;QAC5B,IAAI,CAAC,aAAa,YAAY,CAAC,2BAA2B,EAAE,MAAM,IAAI,CAAC;IACzE;IAEA,kBAAkB;QAChB,IAAI,CAAC,aAAa,YAChB;IACJ;IAEA,kBAAkB;QAChB,IAAI,CAAC,aAAa,YAAY;IAChC;IAEA,gCAAgC,OAAO,EAAE,0BAA0B,EAAE;QACnE,8DAA8D;QAC9D,MAAM,iBAAiB,SAAU,KAAK;YACpC,QAAQ,IAAI,MAAM;YAClB,QAAQ,MAAM,KAAK;YACnB,SAAS,oBAAoB,WAAW;QAC1C;QACA,SAAS,iBAAiB,WAAW;IACvC;IAEA,gCAAgC,OAAO,EAAE;QACvC,8DAA8D;QAC9D,MAAM,iBAAiB,SAAU,KAAK;YACpC,QAAQ,IAAI,MAAM;YAClB,QAAQ,IAAI,qCAAkC,MAAM;YACpD,QAAQ,MAAM;YACd,SAAS,oBAAoB,WAAW;QAC1C;QACA,SAAS,iBAAiB,WAAW;IACvC;IAEA,wCAAwC;IACxC,gBAAgB;QACd,IAAI,CAAC,aAAa,YAAY;IAChC;IAEA,2FAA2F;IAC3F,2BAA2B,OAAO,EAAE;QAClC,wEAAwE;QACxE,MAAM,oBAAoB,SAAU,KAAK;YACvC,4FAA4F;YAC5F,IAAI,MAAM,QAAQ,SAAS;YAE3B,QAAQ,IAAI,qCAAkC,MAAM;YACpD,QAAQ,MAAM,KAAK;YACnB,SAAS,oBAAoB,WAAW;YACxC,SAAS,cAAc,YAAY,oBAAoB,SAAS;QAClE;QACA,iFAAiF;QACjF,MAAM,sBAAsB,SAAU,KAAK;YACzC,MAAM;YACN,IAAI,MAAM,OAAO,UAAU,SAAS,WAAW;gBAC7C,QAAQ,MAAM,OAAO,QAAQ,MAAM;gBACnC,SAAS,cAAc,YAAY,oBAAoB,SAAS;gBAChE,SAAS,oBAAoB,WAAW;YAC1C;YACA,qHAAqH;YACrH,IAAI,MAAM,OAAO,UAAU,SAAS,UAAU;gBAC5C,QAAQ,MAAM,OAAO,WAAW,QAAQ,MAAM;gBAC9C,SAAS,cAAc,YAAY,oBAAoB,SAAS;gBAChE,SAAS,oBAAoB,WAAW;YAC1C;QACF;QACA,SAAS,iBAAiB,WAAW;QACrC,SAAS,cAAc,YAAY,iBAAiB,SAAS;IAC/D;IAEA,sGAAsG;IACtG,2BAA2B,OAAO,EAAE,KAAK,EAAE;QACzC,MAAM,iBAAiB,SAAU,KAAK;YACpC,4FAA4F;YAC5F,IAAI,MAAM,QAAQ,SAAS;YAE3B,IAAI,MAAM,QAAQ,KAAK;gBACrB,QAAQ,IAAI;gBACZ,QAAQ,MAAM;gBACd,SAAS,oBAAoB,WAAW;YAC1C,OAAO;gBACL,QAAQ,IAAI;gBACZ,QAAQ,OAAO;gBACf,SAAS,oBAAoB,WAAW;YAC1C;QACF;QACA,SAAS,iBAAiB,WAAW;IACvC;IAEA,0BAA0B,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE;QAC1D,QAAQ,IAAI,sBAAsB;QAElC,mHAAmH;QACnH,MAAM,iBAAiB,SAAU,KAAK;YACpC,4FAA4F;YAC5F,IAAI,MAAM,QAAQ,SAAS;YAC3B,QAAQ,IAAI,CAAC,iCAAiC,EAAE,MAAM,IAAI,CAAC;YAC3D,SAAS,MAAM;YACf,SAAS,oBAAoB,WAAW;YACxC,oFAAoF;YACpF;QACF;QAEA,SAAS,iBAAiB,WAAW;QAErC,yFAAyF;QACzF,MAAM,YAAY,WAAW;YAC3B,SAAS,oBAAoB,WAAW;YACxC;QACF,GAAG;QACH,8EAA8E;QAC9E,MAAM,gBAAgB;YACpB,aAAa;QACf;IACF;IAEA,uBAAuB;QACrB,0GAA0G;QAC1G,MAAM,uBAAuB,SAAU,KAAK;YAC1C,IAAI,MAAM,OAAO,UAAU,SAAS,gBAAgB;gBAClD,SAAS,cAAc,uBAAuB,MAAM,UAAU;gBAC9D,SAAS,oBAAoB,SAAS;YACxC;QACF;QAEA,MAAM,iBAAiB,SAAU,KAAK;YACpC,QAAQ,IAAI,CAAC,iCAAiC,EAAE,MAAM,IAAI,CAAC;YAC3D,oEAAoE;YACpE,IAAI,MAAM,QAAQ,SAAS;gBACzB,SAAS,cAAc,uBAAuB,MAAM,UAAU;gBAC9D,SAAS,iBAAiB,SAAS;YACrC;QACF;QACA,SAAS,iBAAiB,WAAW;IACvC;AACF;kBAEe,IAAI;;;;;qDCvIN;iEA+BA;gDAaA;8DAgEA;AAnIb;AAEA;AACA;AACA;AACA;AACA;;AACA;;AATA;AAWA,kFAAkF;AAClF,MAAM,oBAAoB;IACxB,OAAO,CAAA,GAAA,wCAAgC;AACzC;AAEA,MAAM,cAAc,SAAU,IAAI;IAChC,IAAI,SAAS,SACX,OAAO;SACF,IAAI,SAAS,QAClB,OAAO;AAEX;AAGO,MAAM,kBAAkB,SAAU,MAAM,EAAE,IAAI;IACnD,+FAA+F;IAC/F,MAAM,QAAQ,YAAY;IAE1B,uCAAuC;IACvC,CAAA,GAAA,2BAAU,EAAE,sBAAsB;IAClC,uHAAuH;IACvH,IAAI,OAAO,OAAO;QAChB,QAAQ,IAAI,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;QACxC,CAAA,GAAA,4DAAwC,EAAE;IAC5C,OACE,8CAA8C;IAC9C,qCAAqC;IACrC,6CAA6C;IAC7C,IAAI,CAAC,CAAA,GAAA,mCAAyB,EAAE,QAAQ,2BAA2B;QACjE,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,iBAAiB,EAAE,MAAM,CAAC;QACrD,sDAAsD;QACtD,yBAAc,8BAA8B,OAAO,MAAM;QACzD,WAAW;YACT,CAAA,GAAA,8BAAa;QACf,GAAG;IACL,OAAO;QACL,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,uBAAuB,EAAE,MAAM,CAAC;QAC3D,yBAAc,4BAA4B,OAAO,MAAM;QACvD,QAAQ,IAAI,CAAC,MAAM,EAAE,OAAO,KAAK,kBAAkB,CAAC;QACpD,CAAA,GAAA,gCAAe,EAAE;IACnB;AAEJ;AAGO,MAAM,8BAA8B,SAAU,sBAAsB;IACzE,QAAQ,IAAI,CAAC,EAAE,uBAAuB,KAAK,iEAAiE,CAAC;IAC7G,yBAAc,iDAAiD,uBAAuB;IAEtF,gCAAgC;IAChC,MAAM,YAAY,CAAA,GAAA,yBAAiB;IACnC,QAAQ,IAAI,CAAC,EAAE,uBAAuB,KAAK,UAAU,EAAE,UAAU,KAAK,4BAA4B,CAAC;IACnG,yBAAc,4BAA4B,uBAAuB,MAAM,UAAU,MAAM;IACvF,4EAA4E;IAC5E,gBAAgB,WAAW;AAC7B;AAGO,MAAM,aAAa,SAAU,UAAU,EAAE,IAAI;IAClD,+CAA+C;IAC/C,CAAA,GAAA,2BAAU,EAAE;IACZ,gDAAgD;IAChD,MAAM,YAAY,CAAA,GAAA,0BAAkB,EAAE;IACtC,QAAQ,IAAI,UAAU,MAAM;IAC5B,sGAAsG;IACtG,gBAAgB,WAAW;AAC7B;AAEA,iHAAiH;AACjH,MAAM,uBAAuB,SAAU,0BAA0B;IAC/D,+CAA+C;IAC/C,IAAI,0BAA0B,CAAC,EAAE,CAAC,SAAS,0BAA0B,CAAC,EAAE,CAAC,OACvE,kEAAkE;IAClE,wGAAwG;IACxG,CAAA,GAAA,2CAAuB,EACrB,CAAA,GAAA,2BAAiB,EACf,2BAA2B,KAAK,CAAC,SAAW,OAAO,UAAU,QAC7D,gBAEF;SAEG;QACL,uEAAuE;QAEvE,wHAAwH;QACxH,4EAA4E;QAC5E,MAAM,SAAS,CAAA,GAAA,2BAAiB,EAAE,0BAA0B,CAAC,EAAE,EAAE;QACjE,MAAM,SAAS,CAAA,GAAA,2BAAiB,EAAE,0BAA0B,CAAC,EAAE,EAAE;QAEjE,IAAI,UAAU,QAAQ;YACpB,yDAAyD;YACzD,CAAA,GAAA,gCAAe,EAAE,0BAA0B,CAAC,EAAE;YAC9C,CAAA,GAAA,gCAAe,EAAE,0BAA0B,CAAC,EAAE;YAC9C,yBAAc,4BAA4B,0BAA0B,CAAC,EAAE,CAAC,MAAM;YAC9E,yBAAc,4BAA4B,0BAA0B,CAAC,EAAE,CAAC,MAAM;QAChF,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ;YAC7B,iHAAiH;YACjH,QAAQ,IACN,CAAC,EAAE,0BAA0B,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,0BAA0B,CAAC,EAAE,CAAC,KAAK,8CAA8C,CAAC;YAE/H,yBAAc,+BAA+B,0BAA0B,CAAC,EAAE,CAAC,MAAM;YACjF,yBAAc,+BAA+B,0BAA0B,CAAC,EAAE,CAAC,MAAM;YACjF,4BAA4B,0BAA0B,CAAC,EAAE;QAC3D,OAAO,IAAI,UAAU,CAAC,QAAQ;YAC5B,4EAA4E;YAC5E,QAAQ,IAAI,CAAC,EAAE,0BAA0B,CAAC,EAAE,CAAC,KAAK,yBAAyB,CAAC;YAC5E,yBAAc,4BAA4B,0BAA0B,CAAC,EAAE,CAAC,MAAM;YAC9E,yBAAc,+BAA+B,0BAA0B,CAAC,EAAE,CAAC,MAAM;YACjF,sGAAsG;YAEtG,CAAA,GAAA,gCAAe,EAAE,0BAA0B,CAAC,EAAE;QAChD,OAAO,IAAI,CAAC,UAAU,QAAQ;YAC5B,yGAAyG;YACzG,QAAQ,IAAI,CAAC,EAAE,0BAA0B,CAAC,EAAE,CAAC,KAAK,yBAAyB,CAAC;YAC5E,yBAAc,+BAA+B,0BAA0B,CAAC,EAAE,CAAC,MAAM;YACjF,yBAAc,4BAA4B,0BAA0B,CAAC,EAAE,CAAC,MAAM;YAC9E,CAAA,GAAA,gCAAe,EAAE,0BAA0B,CAAC,EAAE;QAC9C,qDAAqD;QACvD;IACF;AACF;AAEO,MAAM,2BAA2B;IACtC,gGAAgG;IAChG,MAAM,sBAAsB;IAE5B,0EAA0E;IAC1E,qBAAqB;AACvB;;;;;sDCjIW;6CACE;gEAMA;qDAaA;8DAiCA;AA7Db;AAEA;AACA;AACA;AACA;AACA;AARA;AAUO,IAAI;AACJ,MAAM,UAAU;IAAC;IAAM;IAAM;CAAM;AAE1C,MAAM,iBAAiB;IACrB,OAAO,CAAA,GAAA,wCAAgC;AACzC;AAEO,MAAM,6BAA6B,SAAU,sBAAsB;IACxE,QAAQ,IAAI,CAAC,EAAE,uBAAuB,KAAK,iEAAiE,CAAC;IAC7G,yBAAc,iDAAiD,uBAAuB;IAEtF,gCAAgC;IAChC,MAAM,YAAY,CAAA,GAAA,yBAAiB;IACnC,QAAQ,IAAI,CAAC,EAAE,uBAAuB,KAAK,UAAU,EAAE,UAAU,KAAK,qBAAqB,CAAC;IAC5F,yBAAc,4BAA4B,uBAAuB,MAAM,UAAU,MAAM;IAEvF,4EAA4E;IAC5E,CAAA,GAAA,gCAAc,EAAE,WAAW;AAC7B;AAEO,MAAM,kBAAkB,SAAU,SAAS,gBAAgB,CAAC,EAAE,EAAE,SAAS,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC;IAC/F,qEAAqE;IACrE,IAAI,OAAO,OACT,CAAA,GAAA,2CAAuB,EAAE;SAEzB,0JAA0J;IAC1J,4EAA4E;IAC5E,IAAI,CAAA,GAAA,2BAAiB,EAAE,QAAQ,SAAS;QACtC,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,yBAAyB,EAAE,OAAO,CAAC,CAAC;QAC/D,yBAAc,4BAA4B,OAAO,MAAM;QACvD,CAAA,GAAA,gCAAe,EAAE;IACnB,OAAO;QACL,6CAA6C;QAC7C,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,mBAAmB,EAAE,OAAO,CAAC,CAAC;QACzD,yBAAc,+BAA+B,OAAO,MAAM;QAC1D,yGAAyG;QACzG,IAAI,KAAK;YACP,qDAAqD;YACrD,IAAI,gBAAgB,CAAC,EAAE,CAAC,OACtB,wLAAwL;YACxL,CAAA,GAAA,oDAAgC,EAAE;iBAElC,2BAA2B,gBAAgB,CAAC,EAAE;eAGhD,gBAAgB,gBAAgB,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,IAAI,EAAE,EAAE,IAAI;IAEjE;AAEJ;AAIO,MAAM,2BAA2B;IACtC,gGAAgG;IAChG,mBAAmB;IACnB,QAAQ,IAAI,qEAA2D;IACvE,yBAAc,eACZ,CAAC,2DAA2D,EAAE,gBAAgB,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,gBAAgB,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,gBAAgB,CAAC,EAAE,CAAC,KAAK,CAAC,EACpJ;IAGF,wEAAwE;IACxE;AACF;;;;;wDCjEa;AAPb;AAEA;AACA;AACA;AACA;;AAPA;AASO,MAAM,qBAAqB;IAChC,4FAA4F;IAC5F,CAAA,GAAA,2BAAU,EAAE;IAEZ,gFAAgF;IAChF,MAAM,YAAY,CAAA,GAAA,kCAA0B;IAE5C,QAAQ,IAAI,CAAC,EAAE,UAAU,KAAK,oBAAoB,CAAC;IACnD,yBAAc,8BAA8B,UAAU,MAAM;IAE5D,yDAAyD;IACzD,IAAI,CAAA,GAAA,mCAAyB,EAAE,WAAW,SAAS;QACjD,QAAQ,IAAI,CAAC,QAAQ,EAAE,UAAU,KAAK,iDAAiD,CAAC;QACxF,yBAAc,4BAA4B,UAAU,MAAM;QAC1D,CAAA,GAAA,gCAAe;IACjB;IAEA,WAAW;QACT,CAAA,GAAA,mCAAkB,EAAE;IACtB,GAAG;AACL;;;;;gDCVW;wDAGE;uDAMA;qDASA;6CA6BA;wDAqCA;AArGb;AACA;AASA;AACA;AACA;;AACA;AACA;AAhBA;AAmBO,IAAI,aAAa;AAGjB,MAAM,qBAAqB;IAChC,wBAAwB;IACxB,aAAa;IACb,CAAA,GAAA,eAAO;AACT;AAEO,MAAM,oBAAoB,SAAU,YAAY;IACrD,CAAA,GAAA,2BAAU,EAAE,sBAAsB;IAClC,CAAA,GAAA,gCAAwB,EAAE;IAC1B;IACA,QAAQ,IAAI,gBAAgB;IAC5B,CAAA,GAAA,0BAAkB,EAAE,aAAa;AACnC;AAGO,MAAM,kBAAkB,SAAU,YAAY;IACnD,8EAA8E;IAC9E,QAAQ,IAAI,sEAA8B,CAAA,GAAA,oBAAY;IACtD,MAAM,OAAO,CAAA,GAAA,kBAAQ,EAAE,GAAG;IAC1B,IAAI,QAAQ,IACV,oDAAoD;IAEpD,mBAAmB;SACd;QACL,mEAAmE;QACnE,QAAQ,IAAI,CAAC,EAAE,aAAa,KAAK,gBAAgB,CAAC;QAClD,yBAAc,8BAA8B,aAAa,MAAM;QAE/D,8BAA8B;QAC9B;QACA,sFAAsF;QACtF,IAAI,CAAA,GAAA,mCAAyB,EAAE,cAAc,SAAS;YACpD,QAAQ,IAAI,CAAC,EAAE,aAAa,KAAK,kCAAkC,CAAC;YACpE,yBAAc,4BAA4B,aAAa,MAAM;YAC7D,QAAQ,IAAI,CAAC,EAAE,aAAa,KAAK,YAAY,CAAC;YAC9C,CAAA,GAAA,gCAAe,EAAE;QACnB,OACE,2CAA2C;QAC3C,kGAAkG;QAClG,CAAA,GAAA,mCAAkB,EAAE,cAAc;IAEtC;AACF;AAEO,MAAM,UAAU,SAAU,MAAM,EAAE,YAAY;IACnD,IAAI,aAAa,WAAW,CAAA,GAAA,2BAAmB,EAAE,QAAQ;QACvD,uEAAuE;QACvE,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,qDAAqD,EAAE,CAAA,GAAA,2BAAmB,EAAE,KAAK,CAAC;QAC7G,QAAQ,IAAI,CAAC,aAAa,EAAE,CAAA,GAAA,2BAAmB,EAAE,KAAK,oBAAoB,CAAC;QAC3E,yBAAc,sBAAsB,OAAO,MAAM,CAAA,GAAA,2BAAmB,EAAE;QACtE,yBAAyB;QACzB,CAAA,GAAA,0BAAkB,EAAE,aAAa;QACjC,CAAA,GAAA,8BAAa;IACf,OAAO;QACL,qEAAqE;QACrE,QAAQ,IACN,CAAC,EAAE,OAAO,KAAK,2DAA2D,EAAE,CAAA,GAAA,2BAAmB,EAAE,KAAK,mBAAmB,EAAE,aAAa,KAAK,CAAC;QAEhJ,yBAAc,wBAAwB,OAAO,MAAM,CAAA,GAAA,2BAAmB,EAAE,MAAM,aAAa;QAC3F,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,iBAAiB,CAAC;QAE7C,sCAAsC;QACtC;QAEA,iJAAiJ;QACjJ,IAAI,OAAO,OACT,CAAA,GAAA,mCAAc;aAEd,CAAA,GAAA,gCAAe,EAAE;IAErB;AACF;AAEA,MAAM,WAAW,SAAU,YAAY;IACrC,QAAQ,IAAI,0BAA0B;IACtC,kBAAkB;IAClB,WAAW;QACT,CAAA,GAAA,qCAAiB;IACnB,GAAG;AACL;AAEO,MAAM,qBAAqB,SAAU,MAAM;IAChD,+FAA+F;IAC/F,6DAA6D;IAC7D,MAAM,eAAe,CAAA,GAAA,yBAAiB,EAAE;IAExC,2GAA2G;IAC3G,IAAI,eAAe,CAAA,GAAA,qBAAa,EAAE,SAAS,GAAG;QAC5C,QAAQ,IAAI;QACZ,yBAAc,eAAe;QAC7B,QAAQ,QAAQ;QAChB;IACF;IACA,QAAQ,IAAI,sEAA8B,OAAO,MAAM,qEAA6B,aAAa;IACjG,yBAAc,gBAAgB,OAAO,MAAM,aAAa;IACxD,uGAAuG;IACvG,IAAI,aAAa,QAAQ;QACvB,QAAQ,IAAI,CAAC,EAAE,aAAa,KAAK,iBAAiB,EAAE,OAAO,KAAK,iCAAiC,CAAC;QAClG,yBAAc,oBAAoB,aAAa,MAAM,OAAO;QAC5D,QAAQ,IAAI,CAAC,EAAE,OAAO,KAAK,iBAAiB,CAAC;QAC7C,sCAAsC;QACtC;QACA,CAAA,GAAA,gCAAe,EAAE;QACjB;IACF;IACA,wCAAwC;IACxC,IAAI,aAAa,OAAO;QACtB,SAAS;QACT;IACF;IACA,kBAAkB;IAClB,WAAW;QACT,gBAAgB;IAClB,GAAG;AACL;;;;;qDCrIa;sDAKA;gDAKA;AAbb;;AACA;AAEO,MAAM,kBAAkB;IAC7B,CAAA,GAAA,4BAAW,EAAE;IACb,CAAA,GAAA,4BAAW,EAAE,yBAAyB;AACxC;AAEO,MAAM,mBAAmB;IAC9B,CAAA,GAAA,4BAAW,EAAE;IACb,CAAA,GAAA,4BAAW,EAAE,yBAAyB;AACxC;AAEO,MAAM,aAAa;IACxB,QAAQ,IAAI;IACZ,CAAA,GAAA,8BAAa;AACf;;;;;AChBA,MAAM;IACJ,aAAc;QACZ,IAAI,CAAC,cAAc,SAAS,cAAc;QAC1C,IAAI,CAAC,eAAe,SAAS,cAAc;QAC3C,IAAI,CAAC,UAAU,SAAS,cAAc;QACtC,IAAI,CAAC,cAAc,IAAI,CAAC,YAAY,KAAK,IAAI;IAC/C;IAEA,aAAa;QACX,IAAI,CAAC,QAAQ,MAAM,UAAU;IAC/B;IAEA,gBAAgB;QACd,IAAI,CAAC,QAAQ,MAAM,UAAU;IAC/B;IAEA,kBAAkB;QAChB,IAAI,CAAC,YAAY,MAAM,UAAU;QACjC,IAAI,CAAC;IACP;IAEA,kBAAkB;QAChB,IAAI,CAAC,YAAY,MAAM,UAAU;QACjC,IAAI,CAAC;IACP;IAEA,mBAAmB;QACjB,IAAI,CAAC,aAAa,MAAM,UAAU;QAClC,IAAI,CAAC;IACP;IAEA,mBAAmB;QACjB,IAAI,CAAC,aAAa,MAAM,UAAU;QAClC,IAAI,CAAC;IACP;IAEA,YAAY,KAAK,EAAE,OAAO,EAAE;QAC1B,QAAQ,IAAI,gBAAgB,MAAM;QAClC,IAAI,MAAM,OAAO,UAAU,SAAS,uBAAuB;YACzD,QAAQ,IAAI;YACZ,mCAAmC;YACnC,IAAI,MAAM,OAAO,OAAO,mCACtB,IAAI,CAAC;YAEP,IAAI,MAAM,OAAO,OAAO,oCACtB,IAAI,CAAC;YAEP,SAAS,oBAAoB,SAAS,IAAI,CAAC;YAC3C;QACF;IACF;IAEA,yBAAyB,OAAO,EAAE;QAChC,IAAI,CAAC,iBAAiB,CAAC,QAAU,IAAI,CAAC,YAAY,OAAO;QACzD,SAAS,iBAAiB,SAAS,IAAI,CAAC;IACxC,qEAAqE;IACvE;IAEA,4BAA4B;QAC1B,QAAQ,IAAI;IACd;AACF;kBAEe,IAAI;;;;;AC/DnB,MAAM;IACJ,aAAa,OAAO,EAAE;QACpB,iEAAiE;QACjE,MAAM,mCAAmC,SAAU,KAAK;YACtD,IAAI,MAAM,QAAQ,SAChB,MAAM;QAEV;QAEA,MAAM,iBAAiB;YACrB,MAAM,kBAAkB,SAAS,cAAc,gBAAgB;YAE/D,qDAAqD;YACrD,IAAI,oBAAoB,IAAI;gBAC1B,MAAM;gBACN;YACF;YAEA,mFAAmF;YACnF,QAAQ;YACR,wBAAwB;YACxB,SAAS,cAAc,kBAAkB,MAAM,UAAU;YACzD,SAAS,cAAc,kBAAkB,oBAAoB,SAAS;YACtE,SAAS,cAAc,SAAS,oBAAoB,WAAW;QACjE;QAEA,SAAS,cAAc,SAAS,iBAAiB,WAAW;QAC5D,SAAS,cAAc,kBAAkB,iBAAiB,SAAS;IACrE;AACF;kBAEe,IAAI","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-c7f291573a1a320d.js","app.js","src/js/controllers/welcomeController.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/js/controllers/gameController.js","src/js/model.js","src/js/helpers.js","src/js/controllers/eventsDisplayController.js","src/js/views/playersView.js","src/js/controllers/buttonsController.js","src/js/views/buttonsView.js","src/js/controllers/honkyController.js","src/js/controllers/vadeRetroController.js","src/js/controllers/letController.js","src/js/controllers/zapController.js","src/js/controllers/farewellController.js","src/js/views/farewellView.js","src/js/views/welcomeView.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"138b6a135baa4167\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import { waitForStartInput } from \"./src/js/controllers/welcomeController\";\n\nwaitForStartInput();\n","import { initializeGame } from \"./gameController\";\nimport welcomeView from \"../views/welcomeView\";\n\nexport const waitForStartInput = function () {\n  welcomeView.waitForStart(initializeGame);\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import * as model from \"../model\";\nimport * as eventsDisplay from \"./eventsDisplayController\";\nimport playersView from \"../views/playersView\";\n\nimport { randomInt, defineMax, hasAPlayerCommitedAMistake, translateDirection } from \"../helpers\";\nimport { handleHumanTurnToPlay, triggerCommandsPopup, eraseHumanCheck, humanReactionToLet } from \"./buttonsController\";\nimport { honkyTonkByVirtualPlayer } from \"./honkyController\";\nimport { vadeRetroByVirtualPlayer } from \"./vadeRetroController\";\nimport { zapByVirtualPlayer } from \"./zapController\";\nimport { endGameByVictory } from \"./farewellController\";\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nconst showPlayers = function (players, player) {\n  // Show the players on the screen\n  playersView.renderPlayers(players);\n  // Show who is the player currently playing\n  playersView.highlightActivePlayer(player);\n};\n\nconst startGame = function () {\n  // Since this is the very beginning of the game, we start with all the players involved\n\n  //We choose the first player and then launch the game\n  const firstPlayer = model.chooseFirstPlayer();\n\n  // We show the players on scren\n  showPlayers(model.currentPlayers, firstPlayer);\n\n  // We let the human player know the name of the first player\n  eventsDisplay.gameStartAnnouncement(firstPlayer.name);\n\n  // Select randomly the direction towards which the game will start\n  model.chooseDirectionForFirstYa();\n\n  // Launch the game with a ya\n  // Change the console log by a graphic representation in a view in the future\n  console.log(\n    `${firstPlayer.name} commence le jeu en faisant un ya vers la ${translateDirection(model.gameDirection)}`\n  );\n  // As a matter of fact,  This is the future view\n  eventsDisplay.firstShotAnnouncement(firstPlayer.name, translateDirection(model.gameDirection));\n  model.changePlayer(firstPlayer);\n\n  // we allow the player to see the various commands by pressing Enter\n  triggerCommandsPopup();\n};\n\nexport const mistakesWereMade = function (player = model.currentPlayer) {\n  // It is not a problem to select players by their names in this case but selecting them by Id would be admittedly better\n  // What happens if a player makes a mistake ?\n  console.log(`${player.name} has committed a mistake and must leave the game`);\n\n  // Let the player know that one of his challengers has just been eliminated\n  eventsDisplay.virtualPlayerEliminationAnnouncement(player.name);\n\n  // Get rid of the player that has commited a mistake\n  model.updateCurrentPlayers(player);\n\n  // Guard function to end the game if only two players have not been eliminated\n  if (model.currentPlayers.length === 2) {\n    playersView.renderPlayers(model.currentPlayers);\n    console.log(\n      `Il n'y a plus que deux joueurs : ${model.currentPlayers[0].name} et ${model.currentPlayers[1].name} donc le jeu est fini`\n    );\n    // The game ends here and the human player has won\n    console.log(\"🥇🥇🥇 Bravo !! vous avez gagné 🥇🥇🥇\");\n    endGameByVictory();\n    //\n\n    return;\n  }\n  //We wait 4 seconds before re-starting the game\n  setTimeout(() => {\n    startGame();\n    humanOrMachine();\n  }, 4000);\n};\n\n// This function will make the virtual player chooe between different shots depending on the players profile and then handles the various actions that will follow.\nexport const virtualPlayerChoice = function (player, zapPossible = true) {\n  // Highlight the player whose turn it is to play on the graphical representation\n  playersView.highlightActivePlayer(player);\n\n  // Define a random number to help choose an option\n  const randomNumber = randomInt(0, defineMax(player));\n  console.log(`${player.name} is ${player.riskProfile} and got ${randomNumber} as a random number`);\n\n  // Depending on this random number, we then select a shot for the virtual player to play\n  if (randomNumber <= 3) {\n    console.log(`${player.name} has chosen to hold down`);\n    eventsDisplay.virtualPlayerShotAnnouncement(player.name, \"Hold Down\");\n    model.changeDirectionAfterHoldDown();\n    // Guard to stop the game if a mistake has been committed\n    if (hasAPlayerCommitedAMistake(player, \"hold down\")) {\n      console.log(` 😡😡😡 ${player.name} has failed while trying to hold down. ${player.name} is eliminated 😡😡😡`);\n      eventsDisplay.virtualPlayerMistakeWarning(player.name, \"Hold Down\");\n      mistakesWereMade();\n      return;\n    }\n    model.changePlayer(player);\n  } else if (randomNumber > 3 && randomNumber <= 6) {\n    console.log(`${player.name} has chosen to honky tonk`);\n    eventsDisplay.virtualPlayerShotAnnouncement(player.name, \"Honky Tonk\");\n    setTimeout(() => {\n      honkyTonkByVirtualPlayer();\n    }, 2000);\n    return;\n  } else if (randomNumber > 6 && randomNumber <= 10) {\n    console.log(`${player.name} has chosen to ahi`);\n    eventsDisplay.virtualPlayerShotAnnouncement(player.name, \"Ahi\");\n    // Guard if a mistake has been committed\n    if (hasAPlayerCommitedAMistake(player, \"ahi\")) {\n      console.log(` 😡😡😡 ${player.name} has failed while trying to ahi. ${player.name} is eliminated 😡😡😡`);\n      eventsDisplay.virtualPlayerMistakeWarning(player.name, \"Ahi\");\n      mistakesWereMade();\n      return;\n    }\n    console.log(`${player.name} a bien fait ahi`);\n    model.changePlayer(player, 2);\n  } else if (randomNumber > 10 && randomNumber <= 15) {\n    // Guard to prevent the game from continuing if the player who's trying to let commits a mistake while doing so\n    if (hasAPlayerCommitedAMistake(player, \"let\")) {\n      console.log(` 😡😡😡 ${player.name} has failed while trying to let. ${player.name} is eliminated 😡😡😡`);\n      eventsDisplay.virtualPlayerMistakeWarning(player.name, \"Let\");\n      mistakesWereMade();\n      return;\n    }\n    console.log(`${player.name} has chosen to let`);\n    eventsDisplay.virtualPlayerShotAnnouncement(player.name, \"Je laisse.\");\n    humanReactionToLet();\n    return;\n  } else if (randomNumber > 15 && randomNumber <= 18) {\n    console.log(`${player.name} has chosen to Vade Retro`);\n    eventsDisplay.virtualPlayerShotAnnouncement(player.name, \"Vade Retro\");\n    vadeRetroByVirtualPlayer();\n    return;\n  } else if (randomNumber > 18 && randomNumber <= 25) {\n    // condtionality to prevent a player who said \"Je prends\" after being zapped to zap afterwards\n    if (zapPossible) {\n      console.log(`${player.name} has chosen to Zap`);\n      eventsDisplay.virtualPlayerShotAnnouncement(player.name, \"Zap\");\n      // We shall aknowledge the fact that a zap sequence has been initiated\n      model.updateListOfZappedPlayers(player);\n      model.recordFirstPlayerToZap(player);\n      zapByVirtualPlayer(player);\n      return;\n    } else {\n      console.log(\"Zap denied\");\n      virtualPlayerChoice(player, false);\n      return;\n    }\n  } else {\n    console.log(`${player.name} has chosen to ya`);\n    eventsDisplay.virtualPlayerShotAnnouncement(player.name, \"Ya\");\n\n    // Guard to stop the game if a mistake has been committed\n    if (hasAPlayerCommitedAMistake(player, \"ya\")) {\n      console.log(`😡😡😡 ${player.name} has failed while trying to ya. ${player.name} is eliminated 😡😡😡`);\n      eventsDisplay.virtualPlayerMistakeWarning(player.name, \"Ya\");\n      mistakesWereMade();\n      return;\n    }\n\n    model.changePlayer(player);\n  }\n\n  // We go back to testing if the player is virtual or human and relaunch the game\n  setTimeout(() => humanOrMachine(model.currentPlayer), 2000);\n};\n\nexport const humanOrMachine = function () {\n  //We check if the player that shall play now is human or not\n  if (model.isHumanPlayerInvolved()) {\n    //The human player cannot be selected to start the game for the sake of simplicity\n    //What happens if the human player is selected in the course of the game\n    console.log(\"C'est au tour du joueur humain de jouer\");\n    eventsDisplay.drawHumanPlayerAttention();\n    handleHumanTurnToPlay();\n  } else {\n    console.log(`C'est au tour de ${model.currentPlayer.name} de jouer. Que va-t-il se passer ?`);\n    // Let the human player know whose player's turn it is to play\n    eventsDisplay.playerChangeAnnouncement(model.currentPlayer.name);\n    // if the player is virtual, then it automatically plays its turn\n    // Make the virtual player decide which shot he is going to play\n    virtualPlayerChoice(model.currentPlayer);\n  }\n};\n\nexport const initializeGame = function (name = model.humanPlayerName) {\n  // We do not want to see the log of the pas events when we start another game\n  playersView.eraseEvents();\n  eraseHumanCheck();\n  model.createInitialListOfPlayers(name);\n  // The function to create the initial list of players is separated from startGame() so that we can use said function to restart a game after an elimination without re-creating a whole new array of players\n  startGame();\n  humanOrMachine();\n};\n","\"use strict\";\n\nimport { honkyTonkHelper, randomInt, vadeRetroHelper } from \"./helpers\";\n\n// const players = [\n//   { numero: 1, name: \"Camille\", human: true, zapped: false  },\n//   { numero: 2, name: \"Patrick\", riskProfile: \"bold\", skill: \"low\", human: false, zapped: false  },\n//   { numero: 3, name: \"Jean-Claude\", riskProfile: \"cautious\", skill: \"low\", human: false, zapped: false  },\n//   { numero: 4, name: \"Claudine\", riskProfile: \"bold\", skill: \"average\", human: false, zapped: false  },\n//   { numero: 5, name: \"Martine\", riskProfile: \"average\", skill: \"average\", human: false, zapped: false  },\n//   { numero: 6, name: \"Michel\", riskProfile: \"average\", skill: \"high\", human: false, zapped: false  },\n// ];\nconst players = [\n  { numero: 1, name: \"\", human: true, zapped: false },\n  { numero: 2, name: \"Patrick\", riskProfile: \"bold\", skill: \"high\", human: false, zapped: false },\n  { numero: 3, name: \"Jean-Claude\", riskProfile: \"cautious\", skill: \"high\", human: false, zapped: false },\n  { numero: 4, name: \"Claudine\", riskProfile: \"bold\", skill: \"high\", human: false, zapped: false },\n  { numero: 5, name: \"Martine\", riskProfile: \"average\", skill: \"high\", human: false, zapped: false },\n  { numero: 6, name: \"Michel\", riskProfile: \"average\", skill: \"high\", human: false, zapped: false },\n];\n\nexport let currentPlayers;\nexport let currentPlayer;\nexport let gameDirection;\nexport let playerInitiatingAZap;\nexport let humanPlayerName;\n\nconst updateHumanPlayerName = function (patro) {\n  if (humanPlayerName === patro) {\n    return;\n  } else {\n    humanPlayerName = patro;\n  }\n};\n\nexport const createInitialListOfPlayers = function (patro) {\n  currentPlayers = [];\n  players.forEach((el) => currentPlayers.push(el));\n  // register the name of the human player in case we want to stat another game\n  updateHumanPlayerName(patro);\n  // Register the fact that we have got a name for our human player\n  currentPlayers[0].name = patro;\n  console.log(\"vérif que le nom du joueur humain est bien pris en compte\", currentPlayers[0].name);\n  console.log(\"vérif que le nom du joueur humain est bien pris en compte\", currentPlayers);\n};\n\nexport const chooseFirstPlayer = function () {\n  // We create a random integer (for the sake of simplicity, we decide that the game will always be launched by a virtual player)\n  let indexOfFirstPlayer = randomInt(1, currentPlayers.length - 1);\n\n  // The direction of the game is re-initialized (In case we are starting again after an elimination)\n  gameDirection = \"\";\n\n  // We chose a player from the array\n  currentPlayer = currentPlayers[indexOfFirstPlayer];\n  console.log(`Le  joueur choisi est : ${currentPlayer.name}`);\n  return currentPlayer;\n};\n\nexport const chooseAPlayerThatIsNotHuman = function () {\n  let indexOfFirstPlayer = randomInt(1, currentPlayers.length - 1);\n  // We chose a player from the array\n  currentPlayer = currentPlayers[indexOfFirstPlayer];\n  return currentPlayer;\n};\n\nexport const chooseRandomPlayer = function (player = \"\") {\n  // For the zap shot, we need the impossibility for a  player to randomly select himself\n  const transitArray = currentPlayers.filter((pl) => pl !== player);\n\n  // Case where a player has to be selected after, let's say, Honky Tonk or Vade Retro. Therefore, the human player is also part of the equation this time\n  // The game direction is not modified, hence the need for another function\n  let indexOfNewPlayer = randomInt(-1, transitArray.length - 1);\n  currentPlayer = transitArray[indexOfNewPlayer];\n  return currentPlayer;\n};\n\nexport const updateCurrentPlayer = function (name) {\n  currentPlayer = currentPlayers.find((player) => player.name === name);\n  console.log(\"new current player\", currentPlayer);\n  return currentPlayer;\n};\n\nexport const chooseDirectionForFirstYa = function () {\n  //We randomly chose a direction with which the game will start\n  const rand1 = randomInt(0, 2);\n  if (rand1 === 1) {\n    gameDirection = \"left\";\n  } else {\n    gameDirection = \"right\";\n  }\n};\n\nexport const updateCurrentPlayers = function (player) {\n  const currentPlayerIndex = currentPlayers.indexOf(player);\n  currentPlayers.splice(currentPlayerIndex, 1);\n  console.log(\"voici le nouvel array des joueurs:\", currentPlayers);\n};\n\nexport const changePlayer = function (player, increment = 1) {\n  const indexOfCurrentPlayer = currentPlayers.indexOf(player);\n  console.log(\"player :\", player, \"index of current player :\", indexOfCurrentPlayer, \"increment :\", increment);\n  console.log(`le tour passe au joueur situé ${increment} position(s) vers la ${gameDirection}`);\n\n  // We shoud differentiate two cases depending on the direction of the game\n  if (gameDirection === \"left\") {\n    if (indexOfCurrentPlayer - increment >= 0) {\n      currentPlayer = currentPlayers[indexOfCurrentPlayer - increment];\n    } else {\n      currentPlayer = currentPlayers[currentPlayers.length - increment + indexOfCurrentPlayer];\n    }\n  } else if (gameDirection === \"right\") {\n    if (indexOfCurrentPlayer + increment <= currentPlayers.length - 1) {\n      currentPlayer = currentPlayers[indexOfCurrentPlayer + increment];\n    } else {\n      currentPlayer = currentPlayers[increment - (currentPlayers.length - indexOfCurrentPlayer)];\n    }\n  }\n  console.log(currentPlayer);\n  console.log(\"joueur actuel après changement:\", currentPlayer.name, \"current player human ?\", currentPlayer.human);\n};\n\nexport const isHumanPlayerInvolved = function () {\n  if (currentPlayer.human) {\n    return true;\n  }\n};\n\nexport const changeDirectionAfterHoldDown = function () {\n  // We change the direction of the game\n  gameDirection === \"left\" ? (gameDirection = \"right\") : (gameDirection = \"left\");\n  console.log(\"Game direction is now :\", gameDirection);\n};\n\nexport const lookForPlayersReactingToHonkyTonk = function () {\n  // We want to return an array of players who will have to houba houba\n  return honkyTonkHelper(gameDirection, currentPlayers, currentPlayer);\n};\n\nexport const lookForPlayersReactingToVadeRetro = function () {\n  // We want to return an array of players who will have to sa ta nas\n\n  return vadeRetroHelper(gameDirection, currentPlayers, currentPlayer);\n};\n\nexport const updateListOfZappedPlayers = function (obj) {\n  // We must set the zapped property of the zapped player to true to indicated that he's been zapped.\n  currentPlayers.find((player) => player.numero === obj.numero).zapped = true;\n  console.log(\"🐹🐹 Test zap update 🐹🐹\", currentPlayers);\n};\n\nexport const unzapAllPlayers = function () {\n  currentPlayers.forEach((player) => (player.zapped = false));\n};\n\nexport const recordFirstPlayerToZap = function (player = \"human\") {\n  // Two separate case : the player who initiates a zap is human or isn't\n  if (player === \"human\") {\n    console.log(\"TRIG\");\n    playerInitiatingAZap = currentPlayers.find((obj) => obj.human === true);\n  } else {\n    playerInitiatingAZap = player;\n  }\n};\n\nexport const endOfZap = function () {\n  // Reset the name of the first player to zap\n  playerInitiatingAZap = \"\";\n  // set that no players have not been zapped\n  unzapAllPlayers();\n};\n\nexport const extractPlayer = function (name) {\n  return currentPlayers.find((player) => player.name === name);\n};\n","import { currentPlayer, gameDirection } from \"./model\";\n\nexport const randomInt = function (min, max) {\n  return Math.floor(Math.random() * (max - min) + 1) + min;\n};\n\nexport const defineMax = function (currentPlayer) {\n  if (currentPlayer.riskProfile === \"cautious\") return 33;\n  if (currentPlayer.riskProfile === \"average\") return 28;\n  if (currentPlayer.riskProfile === \"bold\") return 23;\n};\n\nexport const defineRandomNumberToGenerateMistakeChance = function (shotPlayed, currentPlayer) {\n  if (shotPlayed === \"ya\" || shotPlayed === \"let\") {\n    if (currentPlayer.skill === \"low\") {\n      return 80;\n    } else if (currentPlayer.skill === \"average\") {\n      return 40;\n    }\n  } else if (currentPlayer.skill === \"high\") {\n    return 21;\n  }\n  if (shotPlayed === \"hold down\" || shotPlayed === \"ahi\") {\n    if (currentPlayer.skill === \"low\") {\n      return 90;\n    } else if (currentPlayer.skill === \"average\") {\n      return 45;\n    }\n  } else if (currentPlayer.skill === \"high\") {\n    return 25;\n  }\n  if (shotPlayed === \"honky tonk\") {\n    if (currentPlayer.skill === \"low\") {\n      return 195;\n    } else if (currentPlayer.skill === \"average\") {\n      return 60;\n    } else if (currentPlayer.skill === \"high\") {\n      return 25;\n    }\n  }\n  if (shotPlayed === \"reaction to honky tonk\" || shotPlayed === \"take\") {\n    if (currentPlayer.skill === \"low\") {\n      return 125;\n    } else if (currentPlayer.skill === \"average\") {\n      return 50;\n    }\n  } else if (currentPlayer.skill === \"high\") {\n    return 22;\n  }\n};\n\n// This function checks if a player has commited a mistake\nexport const hasAPlayerCommitedAMistake = function (player = currentPlayer, shot = shotPlayed) {\n  const max = defineRandomNumberToGenerateMistakeChance(shot, player);\n  const rand = randomInt(0, max);\n  console.log(`Pour le % d'erreur, ${player.name} a obtenu ${rand} comme nombre aléatoire`);\n  if (rand > 20) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n// This function checks if the player have been successful specifically when doing houba houba when doing houba houba and returns a boolean\nexport const hitOrMissHonkyTonk = function (playerReactingToShot, shot) {\n  console.log(`${playerReactingToShot.name} va devoir faire \"${shot}\"`);\n\n  if (hasAPlayerCommitedAMistake(playerReactingToShot, \"reaction to honky tonk\")) {\n    console.log(`${playerReactingToShot.name} has made a mistake while doing \"${shot}\"`);\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const honkyTonkHelper = function (gameDirection, currentPlayers, currentPlayer) {\n  const indexOfCurrentPlayer = currentPlayers.indexOf(currentPlayer);\n  if (gameDirection === \"left\") {\n    if (indexOfCurrentPlayer >= 2)\n      return [currentPlayers[indexOfCurrentPlayer - 1], currentPlayers[indexOfCurrentPlayer - 2]];\n    if (indexOfCurrentPlayer === 1)\n      return [currentPlayers[indexOfCurrentPlayer - 1], currentPlayers[currentPlayers.length - 1]];\n    if (indexOfCurrentPlayer === 0)\n      return [currentPlayers[currentPlayers.length - 1], currentPlayers[currentPlayers.length - 2]];\n  } else {\n    if (indexOfCurrentPlayer <= currentPlayers.length - 3)\n      return [currentPlayers[indexOfCurrentPlayer + 1], currentPlayers[indexOfCurrentPlayer + 2]];\n    if (indexOfCurrentPlayer === currentPlayers.length - 2)\n      return [currentPlayers[indexOfCurrentPlayer + 1], currentPlayers[0]];\n    if (indexOfCurrentPlayer === currentPlayers.length - 1) return [currentPlayers[0], currentPlayers[1]];\n  }\n};\n\nexport const vadeRetroHelper = function (gameDirection, currentPlayers, currentPlayer) {\n  const indexOfCurrentPlayer = currentPlayers.indexOf(currentPlayer);\n\n  if (gameDirection === \"left\") {\n    if (indexOfCurrentPlayer >= 3)\n      return [\n        currentPlayers[indexOfCurrentPlayer - 1],\n        currentPlayers[indexOfCurrentPlayer - 2],\n        currentPlayers[indexOfCurrentPlayer - 3],\n      ];\n    if (indexOfCurrentPlayer === 2)\n      return [\n        currentPlayers[indexOfCurrentPlayer - 1],\n        currentPlayers[indexOfCurrentPlayer - 2],\n        currentPlayers[currentPlayers.length - 1],\n      ];\n    if (indexOfCurrentPlayer === 1)\n      return [\n        currentPlayers[indexOfCurrentPlayer - 1],\n        currentPlayers[currentPlayers.length - 1],\n        currentPlayers[currentPlayers.length - 2],\n      ];\n    if (indexOfCurrentPlayer === 0)\n      return [\n        currentPlayers[currentPlayers.length - 1],\n        currentPlayers[currentPlayers.length - 2],\n        currentPlayers[currentPlayers.length - 3],\n      ];\n  } else {\n    if (indexOfCurrentPlayer <= currentPlayers.length - 4)\n      return [\n        currentPlayers[indexOfCurrentPlayer + 1],\n        currentPlayers[indexOfCurrentPlayer + 2],\n        currentPlayers[indexOfCurrentPlayer + 3],\n      ];\n    if (indexOfCurrentPlayer === currentPlayers.length - 3)\n      return [currentPlayers[indexOfCurrentPlayer + 1], currentPlayers[indexOfCurrentPlayer + 2], currentPlayers[0]];\n    if (indexOfCurrentPlayer === currentPlayers.length - 2)\n      return [currentPlayers[indexOfCurrentPlayer + 1], currentPlayers[0], currentPlayers[1]];\n    if (indexOfCurrentPlayer === currentPlayers.length - 1)\n      return [currentPlayers[0], currentPlayers[1], currentPlayers[2]];\n  }\n};\n\nexport const translateDirection = function (gameDirection) {\n  if (gameDirection === \"left\") return \"gauche\";\n  if (gameDirection === \"right\") return \"droite\";\n};\n\nexport const defineReactionTime = function () {\n  return randomInt(1, 4) * 1000;\n};\n","//These Functions make sure that the events that are occuring are properly displayed\nimport playersView from \"../views/playersView\";\n\nexport const welcomeMessage = function () {\n  playersView.renderEvents(\"Bonne chance Camille. Le jeu commence !!\", \"welcome\");\n};\n\nexport const gameStartAnnouncement = function (name) {\n  playersView.renderEvents(`🙋‍♀️ ${name} a choisi de jouer en premier`, \"player-change\");\n};\n\nexport const firstShotAnnouncement = function (name, direction) {\n  playersView.renderEvents(`🙋‍♀️ ${name} commence le jeu en faisant un ya vers la ${direction}`, \"event\");\n};\n\nexport const virtualPlayerShotAnnouncement = function (name, shot) {\n  playersView.renderEvents(`🙆 ${name} a choisi de faire un ${shot}`, \"event\");\n};\n\nexport const virtualPlayerMistakeWarning = function (name, shot) {\n  playersView.renderEvents(`🤦‍♂️ ${name} a lamentablement échoué dans sa tentative de faire un ${shot}`, \"warning\");\n};\n\nexport const virtualPlayerEliminationAnnouncement = function (name) {\n  playersView.renderEvents(`🤷‍♀️ ${name} a commis une erreur et est éliminé`, \"elimination\");\n};\n\nexport const drawHumanPlayerAttention = function () {\n  playersView.renderEvents(\"🤯 C'est à votre tour de jouer\", \"attention\");\n};\n\nexport const playerChangeAnnouncement = function (name) {\n  playersView.renderEvents(`😱 C'est donc au tour de ${name} de jouer. Que va-t-il se passer ?`, \"player-change\");\n};\n\nexport const virtualPlayerNoiseAnnouncement = function (name, noise) {\n  playersView.renderEvents(`👍🏻 ${name} a réussi à dire ${noise}`, \"validate\");\n};\n\nexport const playerHavingToDesignateAnotherPlayerAnnouncement = function (name) {\n  playersView.renderEvents(`${name} doit désormais appeler un nouveau joueur pour continuer le jeu`, \"event\");\n};\n\nexport const chosenPlayerNameAnnoucement = function (playerToCallName, playerCalledName, noise) {\n  playersView.renderEvents(`${playerToCallName} a appelé ${playerCalledName} après avoir dit ${noise}`, \"event\");\n};\n\nexport const zapAnnouncement = function (playerZappingName, playerZappedName) {\n  playersView.renderEvents(`${playerZappingName} a choisi de zapper ${playerZappedName}`, \"event\");\n};\n\nexport const zapFailAnnouncement = function (playerZappedName, playerZappingName) {\n  playersView.renderEvents(\n    `${playerZappedName} a été zappé par ${playerZappingName} alors qu'il avait déjà été zappé`,\n    \"warning\"\n  );\n};\n\nexport const lastZapOkAnnouncement = function (lastPlayerToZapName, firstPlayerToZapName) {\n  playersView.renderEvents(\n    `👍🏻 ${lastPlayerToZapName} a réussi à zapper le premier joueur à avoir zappé : ${firstPlayerToZapName}`,\n    \"validate\"\n  );\n  playersView.renderEvents(`🙋‍♀️ C'est donc à ${firstPlayerToZapName} de reprendre le jeu`, \"event\");\n};\n\nexport const lastZapFailAnnouncement = function (lastPlayerToZapName, firstPlayerToZapName, playerActuallyZappedName) {\n  playersView.renderEvents(\n    `👩🏼‍🦯 ${lastPlayerToZapName} n'a pas réussi à zapper le premier joueur à avoir zappé : ${firstPlayerToZapName} puisqu'il a zappé ${playerActuallyZappedName}`,\n    \"warning\"\n  );\n};\n\nexport const serviceMessage = function (string, type = \"event\") {\n  playersView.renderEvents(string, type);\n};\n\nexport const humanPlayerValidation = function (shot) {\n  playersView.renderEvents(`🐵 Vous avez réussi à faire ${shot}`, \"validate\");\n};\n\nexport const humanPlayerMistakewarning = function (shot) {\n  playersView.renderEvents(`🙈 Vous n'avez pas réussi à faire ${shot}`, \"warning\");\n};\n\nexport const humanTypingMistake = function (key) {\n  playersView.renderEvents(`🐙 Vous avez fait une erreur et pressé la touche ${key}`, \"warning\");\n};\n","class playersView {\n  _playerGrid = \"\";\n  __eventsDisplay = document.querySelector(\".wrapper__tell\");\n\n  highlightActivePlayer(currentPlayer) {\n    document.querySelectorAll(\".player__ball\").forEach((div) => {\n      div.classList.remove(\"active\");\n    });\n    document.querySelector(`.player__ball--${currentPlayer.numero}`).classList.add(\"active\");\n  }\n\n  renderPlayers(currentPlayers) {\n    this._playerGrid = document.querySelector(\".wrapper__show\");\n\n    let html = \"\";\n\n    // The order of the elements of the array is reversed so that the graphical representation matches what happens in the model\n    const reversedArray = [];\n    currentPlayers.forEach((el) => {\n      reversedArray.push(el);\n    });\n\n    reversedArray.reverse().forEach((el, i) => {\n      html =\n        html +\n        `\n      <div data-name=${el.name} class=\"player player--${i + 1}\">\n          <div class=\"child player__ball player__ball--${el.numero}\"></div>\n          <div class=\"child player__name\">${el.name}</div>\n        </div>\n      `;\n    });\n    this._playerGrid.innerHTML = html;\n  }\n\n  renderEvents(eventDescription, type) {\n    const html = `<p class= \"wrapper__tell--${type}\" >${eventDescription}</p>`;\n    this.__eventsDisplay.insertAdjacentHTML(\"afterbegin\", html);\n  }\n\n  eraseEvents() {\n    this.__eventsDisplay.innerHTML = \"\";\n  }\n\n  handleHumanChoiceOfANewPlayer(handler, shot) {\n    //We want the human player to click on the new player with which he want to continue the game\n    // We then want this view to return the name of the player who should carry on playing to the controller\n\n    const insideListener = function (event) {\n      event.preventDefault();\n      if (event.target.classList.contains(\"player\")) {\n        handler(event.target.dataset.name, shot);\n        document.querySelector(\".wrapper__show\").removeEventListener(\"click\", insideListener);\n      }\n      //If the click is not on the name but on the ball, we still want the name of player to be sent back to the controller\n      if (event.target.classList.contains(\"child\")) {\n        handler(event.target.parentNode.dataset.name, shot);\n        document.querySelector(\".wrapper__show\").removeEventListener(\"click\", insideListener);\n      }\n    };\n    document.querySelector(\".wrapper__show\").addEventListener(\"click\", insideListener);\n  }\n}\n\nexport default new playersView();\n","\"use strict\";\n\nimport * as eventsDisplay from \"./eventsDisplayController.js\";\nimport * as model from \"../model.js\";\nimport buttonsView from \"../views/buttonsView.js\";\nimport playersView from \"../views/playersView.js\";\n\nimport { virtualPlayerChoice, mistakesWereMade } from \"./gameController.js\";\nimport { callPlayer, relaunchGameAfterHoubaHouba, honkyTonkByVirtualPlayer } from \"./honkyController.js\";\nimport {\n  playersToSatanas,\n  relaunchGameAfterVadeRetro,\n  checkForSatanas,\n  sayings,\n  vadeRetroByVirtualPlayer,\n} from \"./vadeRetroController.js\";\nimport { letByVirtualPlayer } from \"./letController.js\";\nimport { carryOnZapProcess, toZapOrNotToZap, eraseZapConditions, zapCounter, lastZap } from \"./zapController.js\";\nimport { endGamebyDefeat } from \"./farewellController.js\";\nimport { defineReactionTime } from \"../helpers.js\";\n\nlet virtualHouba;\nexport let hasTheHumanPlayerTriedToTake;\n\n// Function to check that the player has made a ya in the right direction\nconst checkDirection = function (direction) {\n  if (direction === model.gameDirection) {\n    // The player has chosen the right direction for his ya\n    console.log(\"Le joueur a fait un ya dans le bon sens\");\n    eventsDisplay.humanPlayerValidation(\"Ya\");\n    model.changePlayer(model.currentPlayer);\n    setTimeout(() => {\n      virtualPlayerChoice(model.currentPlayer);\n    }, 2000);\n  } else {\n    //The player has lost the game\n    eventsDisplay.humanPlayerMistakewarning(\"Ya\");\n    console.log(\"C'est la lose !!! 😵‍💫\");\n    endGamebyDefeat();\n  }\n};\n\nconst checkIfTheHumanPlayerHasZappedHimself = function (playerZapped) {\n  if (playerZapped.numero === model.currentPlayer.numero) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n// Function to terminate the game if a human player tries to zap himself\n// Two potential occurences :\n//   1°) When the human player initiates a zap\n//   2°) When a human player is reacting to a zap\nconst actIfAHumanPlayerHasZappedhimself = function () {\n  console.log(\"Vous ne pouvez pas vous zapper vous-même\");\n  eventsDisplay.serviceMessage(\"Vous ne pouvez pas vous auto-zapper\");\n  eventsDisplay.humanPlayerMistakewarning(\"Zap\");\n  console.log(\"C'est la lose !!! 😵‍💫\");\n  eraseZapConditions();\n  endGamebyDefeat();\n};\n\nconst checkHumanResponsesToShot = function (keyPressed, type) {\n  // We start by  erasing the commands shown to the human player\n  buttonsView.clearCommands();\n  // Two cases, a shot chosen via a key that is pressed or the name of a player to be zapped that is chosen by clicking on a name.\n  if (type === \"key\") {\n    // This function waits for the key that the player has pressed to check if he has lost or if the game can continue;\n    if (keyPressed === \"h\") {\n      // The player has chosen to play a hold down => the game direction is changing\n      console.log(\"le joueur fait un hold down\");\n      eventsDisplay.humanPlayerValidation(\"Hold Down\");\n      model.changeDirectionAfterHoldDown();\n      model.changePlayer(model.currentPlayer);\n      setTimeout(() => {\n        virtualPlayerChoice(model.currentPlayer);\n      }, 2000);\n    } else if (keyPressed === \"ArrowLeft\") {\n      const dir = \"left\";\n      checkDirection(dir);\n    } else if (keyPressed === \"ArrowRight\") {\n      const dir = \"right\";\n      checkDirection(dir);\n    } else if (keyPressed === \"o\") {\n      console.log(\"le joueur a fait un honky tonk\");\n      eventsDisplay.humanPlayerValidation(\"Honky Tonk\");\n      setTimeout(() => {\n        honkyTonkByVirtualPlayer();\n      }, 2000);\n    } else if (keyPressed === \"a\") {\n      console.log(\"le joueur a fait un ahi\");\n      eventsDisplay.humanPlayerValidation(\"Ahi\");\n      model.changePlayer(model.currentPlayer, 2);\n      setTimeout(() => {\n        virtualPlayerChoice(model.currentPlayer);\n      }, 2000);\n    } else if (keyPressed === \"l\") {\n      console.log(\"Le joueur a dit 'Je laisse'\");\n      eventsDisplay.humanPlayerValidation(\"Je laisse\");\n      humanReactionToLet();\n      // letByVirtualPlayer(model.currentPlayer);\n    } else if (keyPressed === \"v\") {\n      console.log(\"Le joueur dit 'Vade Retro'\");\n      eventsDisplay.humanPlayerValidation(\"Vade Retro\");\n      setTimeout(() => {\n        vadeRetroByVirtualPlayer();\n      }, 2000);\n    } else {\n      console.log(`Le joueur a commis une erreur en pressant ${keyPressed}`);\n      eventsDisplay.humanTypingMistake(keyPressed);\n      console.log(\"C'est la lose !!! 😵‍💫\");\n      endGamebyDefeat();\n    }\n  } else if (type === \"click\") {\n    console.log(`Vous avez choisi de zapper ${keyPressed}`);\n    eventsDisplay.serviceMessage(`Vous avez choisi de zapper ${keyPressed}`);\n    // We must record that if the human player initiated the zap, he or she has to be considered as \"zapped\"\n    model.updateListOfZappedPlayers(model.currentPlayer);\n    const playerZapped = model.extractPlayer(keyPressed);\n    // Guard to prevent a human player frome zapping him or herself\n    if (checkIfTheHumanPlayerHasZappedHimself(playerZapped)) {\n      actIfAHumanPlayerHasZappedhimself();\n      return;\n    }\n    console.log(\"test model.currentPlayer\", model.currentPlayer);\n    carryOnZapProcess(playerZapped);\n    model.recordFirstPlayerToZap();\n    setTimeout(() => {\n      toZapOrNotToZap(playerZapped);\n    }, 2000);\n  }\n};\n\nexport const triggerCommandsPopup = function () {\n  // Show the popup if needed\n  buttonsView.showCommandsToPlayer();\n};\n\nexport const handleHumanTurnToPlay = function () {\n  playersView.highlightActivePlayer(model.currentPlayer);\n  // Offer the human player the possibility to see the various commands\n  buttonsView.showShotsCommands();\n  buttonsView.handlePlayerResponseToShot(checkHumanResponsesToShot);\n};\n\n// This function checks that Houba Houba has been done successfully\nconst checkHumanResponsesToHonkyTonk = function (keyPressed, playersToHoubaHouba) {\n  // We start by  erasing the commands shown to the human player\n  buttonsView.clearCommands();\n\n  // First case, the player reacts successfully\n  if (keyPressed === \"b\") {\n    console.log(\"le joueur a bien fait Houba Houba\");\n    eventsDisplay.humanPlayerValidation(\"Houba Houba\");\n    // If both player  managed to Houba Houba\n    if (!virtualHouba) {\n      console.log(\n        `${playersToHoubaHouba[0].name} & ${playersToHoubaHouba[1].name} ont tous les deux réussi à faire houba houba.`\n      );\n      // If both players are succesful at houba houba then the second player shall choose a new player to continue the game\n      if (playersToHoubaHouba[1].human) {\n        checkHumanDesignationOfANewPlayer(\"honky\");\n        // We take advantage of the test to provide the human player with the name of the virtual player that successfully said \"Houba Houba\"\n        eventsDisplay.virtualPlayerNoiseAnnouncement(playersToHoubaHouba[0].name, \"Houba Houba\");\n      } else {\n        eventsDisplay.virtualPlayerNoiseAnnouncement(playersToHoubaHouba[1].name, \"Houba Houba\");\n        relaunchGameAfterHoubaHouba(playersToHoubaHouba[1]);\n      }\n    } else if (virtualHouba) {\n      // If the virtual player fails to Houba Houba\n      console.log(`${playersToHoubaHouba[1].name} has failed to Houba Houba`);\n      console.log(`${playersToHoubaHouba[1].name} must go !!`);\n      eventsDisplay.virtualPlayerMistakeWarning(playersToHoubaHouba[1].name, \"Houba Houba\");\n      mistakesWereMade(playersToHoubaHouba[1]);\n      return;\n    }\n    // 2nd case, the player doesn't\n  } else {\n    console.log(\"Le joueur a mal fait Houba Houba\");\n    eventsDisplay.humanPlayerMistakewarning(\"Houba Houba\");\n    console.log(\"C'est la lose !!! 😵‍💫\");\n    endGamebyDefeat();\n  }\n};\n\nconst hasTheHumanPlayerSuccesfullyDoneSatanas = function (keyPressed, index) {\n  if (\n    (index === 0 && keyPressed === \"s\") ||\n    (index === 1 && keyPressed === \"t\") ||\n    (index === 2 && keyPressed === \"n\")\n  ) {\n    return true;\n  }\n};\n\nconst checkHumanResponsesToVadeRetro = function (keyPressed) {\n  // We start by erasing the commands shown to the human player\n  buttonsView.clearCommands();\n\n  // We need to know the position of the humain player in the array of the players who are going to react to Vade Retro\n  const index = playersToSatanas.findIndex((player) => player.human === true);\n\n  // Let us define if the human player has reacted succesfully\n  // first case the player reacts succesfully;\n  if (hasTheHumanPlayerSuccesfullyDoneSatanas(keyPressed, index)) {\n    console.log(\"Le joueur a bien réagi en faisant Sa, Ta ou Nas\");\n    eventsDisplay.humanPlayerValidation(\"Sa, Ta ou Nas\");\n    if (index === 2) {\n      // If the human player is to say nas, we then shall ask the player who said ta to choose a player to call\n      relaunchGameAfterVadeRetro(playersToSatanas[1]);\n    } else {\n      checkForSatanas(playersToSatanas[index + 1], sayings[index + 1], index + 1);\n    }\n  } else {\n    // Case where the player reacted unsuccessfully\n    console.log(\"Le joueur a mal dit 'Sa', 'Ta' ou 'Nas'\");\n    eventsDisplay.humanPlayerMistakewarning(\"Sa, Ta ou Nas\");\n    console.log(\"C'est la lose !!! 😵‍💫\");\n    endGamebyDefeat();\n  }\n};\n\n// This function allow the player to do Houba Houba via the graphic interface\nexport const humanResponseToHonkyTonk = function (houba, playersReactingToHonkyTonk) {\n  // virtualHouba stores the information wether the virtual player involved\n  virtualHouba = houba;\n  buttonsView.showHonkyTonkCommands();\n  buttonsView.handlePlayerResponseToHonkyTonk(checkHumanResponsesToHonkyTonk, playersReactingToHonkyTonk);\n};\n\n// This function allow the player to do sa, ta ou nas via the graphic interface\nexport const humanResponseToVadeRetro = function (saying) {\n  buttonsView.showVadeRetroCommands(saying);\n  buttonsView.handlePlayerResponseToVadeRetro(checkHumanResponsesToVadeRetro);\n};\n\nexport const checkHumanDesignationOfANewPlayer = function (shot) {\n  buttonsView.showCallNewPlayerCommands();\n  playersView.handleHumanChoiceOfANewPlayer(callPlayer, shot);\n};\n\nexport const checkReactionToBeingCalled = function (boolean, noise) {\n  buttonsView.clearCommands();\n  if (boolean) {\n    handleHumanTurnToPlay();\n  } else {\n    console.log(`Le joueur a mal dit ${noise}`);\n    eventsDisplay.humanPlayerMistakewarning(noise);\n    console.log(\"C'est la lose !!! 😵‍💫\");\n    endGamebyDefeat();\n  }\n};\n\nexport const humanReactionToBeingCalledAfterHoubaHouba = function (noise) {\n  buttonsView.ShowNameCalledCommands(noise);\n  buttonsView.handlePlayerResponseToCall(checkReactionToBeingCalled, noise);\n};\n\nexport const eraseHumanCheck = function () {\n  hasTheHumanPlayerTriedToTake = \"\";\n};\n\nexport const checkHumanReactionToLet = function (key) {\n  buttonsView.clearCommands();\n  if (key === \"p\") {\n    console.log(\"Le joueur a bien dit 'Je prends'\");\n    eventsDisplay.humanPlayerValidation(\"Je prends\");\n    // We need to specify that the current player is now the human player (hardcoded for now)\n    model.updateCurrentPlayer(`${model.humanPlayerName}`);\n    console.log(\"test\");\n    handleHumanTurnToPlay();\n  } else {\n    console.log(\"Le joueur a mal dit 'Je prends'\");\n    eventsDisplay.humanPlayerMistakewarning(\"Je prends\");\n    console.log(\"C'est la lose !!! 😵‍💫\");\n    endGamebyDefeat();\n  }\n};\n\nexport const MakeAVirtualPlayerTake = function () {\n  letByVirtualPlayer(model.currentPlayer);\n};\n\nexport const humanReactionToLet = function () {\n  buttonsView.showLetCommands();\n  const reactionTime = defineReactionTime();\n  buttonsView.handlePlayerResponseToLet(checkHumanReactionToLet, MakeAVirtualPlayerTake, reactionTime);\n};\n\nexport const humanResponseToZap = function () {\n  buttonsView.showZapCommands();\n  playersView.handleHumanChoiceOfANewPlayer(checkIfHumanZapGoneWell);\n};\n\nexport const checkIfHumanZapGoneWell = function (name) {\n  // Dont show the instructions any more\n  buttonsView.clearCommands();\n\n  console.log(`Vous avez choisi de zapper ${name}`);\n  eventsDisplay.serviceMessage(`Vous avez choisi de zapper ${name}`);\n  // We shall convert the name we got from the click of the player in to an object from the model\n  const playerZapped = model.extractPlayer(name);\n\n  // Guard to prevent a human player frome zapping him or herself\n  if (checkIfTheHumanPlayerHasZappedHimself(playerZapped)) {\n    actIfAHumanPlayerHasZappedhimself();\n    return;\n  }\n\n  // We shall check if we are in a last Zap situation and act accordingly\n  if (zapCounter === model.currentPlayers.lenght - 1) {\n    console.log(\"Tous les joueurs ont été zappés !!!\");\n    eventsDisplay.serviceMessage(\"🙉 Tous les joueurs ont été zappés !!!\");\n    lastZap(model.currentPlayer, playerZapped);\n    return;\n  }\n\n  // 2 cases : the chosen player has already benne zapped or not\n\n  if (playerZapped.zapped) {\n    console.log(`${name} a déjà été zappé`);\n    eventsDisplay.serviceMessage(\"Vous ne pouvez zapper quelqu'un qui a déjà été zappé\");\n    eventsDisplay.humanPlayerMistakewarning(\"Je prends\");\n    console.log(\"C'est la lose !!! 😵‍💫\");\n    eraseZapConditions();\n    endGamebyDefeat();\n  } else {\n    console.log(`${name} n'a pas encore été zappé`);\n    eventsDisplay.serviceMessage(\"Vous avez zappé quelqu'un qui n'a pas encore été zappé\");\n    eventsDisplay.humanPlayerValidation(\"Zap\");\n    // We then let the zapped virtual player carry on with the game\n    carryOnZapProcess(playerZapped);\n    setTimeout(() => {\n      toZapOrNotToZap(playerZapped);\n    }, 2000);\n  }\n};\n","class buttonsView {\n  constructor() {\n    this.commandPanel = document.querySelector(\".commands__contextual\");\n  }\n\n  showShotsCommands() {\n    this.commandPanel.innerHTML =\n      \"<p>C'est à votre tour de jouer</p><p>Appuyez sur Entrée pour découvrir les différentes commandes</p>\";\n  }\n\n  showHonkyTonkCommands() {\n    this.commandPanel.innerHTML = \"<p>Appuyez sur la touche B pour faire 'Houba Houba'</p>\";\n  }\n\n  showVadeRetroCommands(saying) {\n    this.commandPanel.innerHTML = `<p>Vous devez dire ${saying}</p></br><p>Appuyez sur la touche S pour dire Sa</br>Appuyez sur la touche T pour dire Ta</br>Appuyez sur la touche N pour dire Nas</p>`;\n  }\n\n  showCallNewPlayerCommands() {\n    this.commandPanel.innerHTML =\n      \"<p>Cliquez sur le nom d'un joueur pour lui indiquer que c'est à lui de continuer à jouer\";\n  }\n\n  ShowNameCalledCommands(noise) {\n    this.commandPanel.innerHTML = `<p>Appuyez sur D pour dire ${noise}</p>`;\n  }\n\n  showLetCommands() {\n    this.commandPanel.innerHTML =\n      \"<p> Si vous avez envie de prendre : appuyez sur P pour dire 'Je prends'</p><p>Sinon, n'appuyez sur aucune touche</p>\";\n  }\n\n  showZapCommands() {\n    this.commandPanel.innerHTML = \"<p>Cliquez sur le nom d'un joueur pour le zapper</p>\";\n  }\n\n  handlePlayerResponseToHonkyTonk(handler, playersReactingToHonkyTonk) {\n    //We want to see if the human player has pressed the right key\n    const insideListener = function (event) {\n      console.log(event.key);\n      handler(event.key, playersReactingToHonkyTonk);\n      document.removeEventListener(\"keydown\", insideListener);\n    };\n    document.addEventListener(\"keydown\", insideListener);\n  }\n\n  handlePlayerResponseToVadeRetro(handler) {\n    //We want to see if the human player has pressed the right key\n    const insideListener = function (event) {\n      console.log(event.key);\n      console.log(\"le joueur a pressé la touche :\", event.key);\n      handler(event.key);\n      document.removeEventListener(\"keydown\", insideListener);\n    };\n    document.addEventListener(\"keydown\", insideListener);\n  }\n\n  // Erases the orders given to the player\n  clearCommands() {\n    this.commandPanel.innerHTML = \"\";\n  }\n\n  // Function to handle the input of the human player regarding which shot he intends to play\n  handlePlayerResponseToShot(handler) {\n    //We want the key that has has been pressed to go back to the controller\n    const insideKeyListener = function (event) {\n      // Guard to prevent the function to be triggered if the player only want to see the commands\n      if (event.key === \"Enter\") return;\n\n      console.log(\"le joueur a pressé la touche :\", event.key);\n      handler(event.key, \"key\");\n      document.removeEventListener(\"keydown\", insideKeyListener);\n      document.querySelector(\".wrapper\").removeEventListener(\"click\", insideClickListener);\n    };\n    // We want the name of the player that's been zapped to go back to the controller\n    const insideClickListener = function (event) {\n      event.preventDefault();\n      if (event.target.classList.contains(\"player\")) {\n        handler(event.target.dataset.name, \"click\");\n        document.querySelector(\".wrapper\").removeEventListener(\"click\", insideClickListener);\n        document.removeEventListener(\"keydown\", insideKeyListener);\n      }\n      //If the click is not on the name but on the ball, we still want the name of player to be sent back to the controller\n      if (event.target.classList.contains(\"child\")) {\n        handler(event.target.parentNode.dataset.name, \"click\");\n        document.querySelector(\".wrapper\").removeEventListener(\"click\", insideClickListener);\n        document.removeEventListener(\"keydown\", insideKeyListener);\n      }\n    };\n    document.addEventListener(\"keydown\", insideKeyListener);\n    document.querySelector(\".wrapper\").addEventListener(\"click\", insideClickListener);\n  }\n\n  // This function deals with the reaction of the human player when his name is called after houba houba\n  handlePlayerResponseToCall(handler, noise) {\n    const insideListener = function (event) {\n      // Guard to prevent the function to be triggered if the player only want to see the commands\n      if (event.key === \"Enter\") return;\n\n      if (event.key === \"d\") {\n        console.log(\"Le joueur a pressé la bonne touche\");\n        handler(true, noise);\n        document.removeEventListener(\"keydown\", insideListener);\n      } else {\n        console.log(\"Le joueur n'a pas pressé la bonne touche\");\n        handler(false, noise);\n        document.removeEventListener(\"keydown\", insideListener);\n      }\n    };\n    document.addEventListener(\"keydown\", insideListener);\n  }\n\n  handlePlayerResponseToLet(handler1, handler2, reactionTime) {\n    console.log(\"test reaction time\", reactionTime);\n\n    // This function handles what happens if the human player presses a key when he or another player has chosen to let\n    const insideListener = function (event) {\n      // Guard to prevent the function to be triggered if the player only want to see the commands\n      if (event.key === \"Enter\") return;\n      console.log(`Le joueur a appuyé sur la touche ${event.key}`);\n      handler1(event.key);\n      document.removeEventListener(\"keydown\", insideListener);\n      // We need to stop the timer so that no other player can carry on playing afterwards\n      stopTakeTimer();\n    };\n\n    document.addEventListener(\"keydown\", insideListener);\n\n    // We create a timer to trigger the shot of a virtual player in case nobody wants to take\n    const TakeTimer = setTimeout(() => {\n      document.removeEventListener(\"keydown\", insideListener);\n      handler2();\n    }, reactionTime);\n    // We need to be able to stop the timer in case the human player chose to take\n    const stopTakeTimer = function () {\n      clearTimeout(TakeTimer);\n    };\n  }\n\n  showCommandsToPlayer() {\n    // This function makes sure that the popup will not be visible any more when the exit button is clicked on\n    const insideInsideListener = function (event) {\n      if (event.target.classList.contains(\"exit-button\")) {\n        document.querySelector(\".popup-instructions\").style.display = \"none\";\n        document.removeEventListener(\"click\", insideInsideListener);\n      }\n    };\n\n    const insideListener = function (event) {\n      console.log(`Le joueur a appuyé sur la touche ${event.key}`);\n      // If the human player presses enter, he shall be shown the commands\n      if (event.key === \"Enter\") {\n        document.querySelector(\".popup-instructions\").style.display = \"flex\";\n        document.addEventListener(\"click\", insideInsideListener);\n      }\n    };\n    document.addEventListener(\"keydown\", insideListener);\n  }\n}\n\nexport default new buttonsView();\n","\"use strict\";\n\nimport * as eventsDisplay from \"./eventsDisplayController\";\n\nimport { lookForPlayersReactingToHonkyTonk, chooseRandomPlayer, updateCurrentPlayer } from \"../model\";\nimport { mistakesWereMade, humanOrMachine } from \"./gameController\";\nimport { hitOrMissHonkyTonk, hasAPlayerCommitedAMistake } from \"../helpers\";\nimport { humanResponseToHonkyTonk, humanReactionToBeingCalledAfterHoubaHouba } from \"./buttonsController\";\nimport playersView from \"../views/playersView\";\nimport buttonsView from \"../views/buttonsView\";\n\n// This function will define the players that will have to react to the honky tonk\nconst WhoWillHoubaHouba = function () {\n  return lookForPlayersReactingToHonkyTonk();\n};\n\nconst defineNoise = function (shot) {\n  if (shot === \"honky\") {\n    return \"Dring\";\n  } else if (shot === \"vade\") {\n    return \"Je brûle.\";\n  }\n};\n\n// This function will check if the dring has successfully been uttered by the player.\nexport const dringManagement = function (player, shot) {\n  // We must define what the player will have to say depending on the shot currently being played\n  const noise = defineNoise(shot);\n\n  // The player dot should be highlighted\n  playersView.highlightActivePlayer(player);\n  // We differentiate between the case where a human player should react and the case where a virtual player should react\n  if (player.human) {\n    console.log(`Vous devez dire \"${noise}\"`);\n    humanReactionToBeingCalledAfterHoubaHouba(noise);\n  } else {\n    // In the case of a virtual player : 2 cases :\n    // 1°) The player reacts successfully\n    // 2°) The player does not react successfully\n    if (!hasAPlayerCommitedAMistake(player, \"reaction to honky tonk\")) {\n      console.log(`${player.name} a réussi à dire ${noise}`);\n      // we shall let the human player know what's happening\n      eventsDisplay.virtualPlayerShotAnnouncement(player.name, noise);\n      setTimeout(() => {\n        humanOrMachine();\n      }, 3000);\n    } else {\n      console.log(`${player.name} n'a pas réussi à dire ${noise}`);\n      eventsDisplay.virtualPlayerMistakeWarning(player.name, noise);\n      console.log(`😡😡😡${player.name} est éliminé😡😡😡`);\n      mistakesWereMade(player);\n    }\n  }\n};\n\n// This function will choose automatically a new player to start a new turn after honky tonk\nexport const relaunchGameAfterHoubaHouba = function (playerToCallANewPlayer) {\n  console.log(`${playerToCallANewPlayer.name} doit désormais désigner quelqu'un pour devenir le nouveau joueur`);\n  eventsDisplay.playerHavingToDesignateAnotherPlayerAnnouncement(playerToCallANewPlayer.name);\n\n  // A player is randomly selected\n  const newPlayer = chooseRandomPlayer();\n  console.log(`${playerToCallANewPlayer.name} a appelé ${newPlayer.name} après avoir dit Houba Houba`);\n  eventsDisplay.chosenPlayerNameAnnoucement(playerToCallANewPlayer.name, newPlayer.name, \"Houba Houba\");\n  // We then test if the new player has successfully reacted by saying \"Dring\"\n  dringManagement(newPlayer, \"honky\");\n};\n\n// The function takes over once the human player has clicked on the player that he wishes will continue to play\nexport const callPlayer = function (playerName, shot) {\n  // We erase the order that was shown to players\n  buttonsView.clearCommands();\n  // in the model, we set the new current  players\n  const newPlayer = updateCurrentPlayer(playerName);\n  console.log(newPlayer.name, \"est le joueur qui a été choisi pour continuer le jeu\");\n  // We shall then check if the chosen player managed to say dring (or 'je brûle' in case of vade retro)\n  dringManagement(newPlayer, shot);\n};\n\n// This function handles the process of the various reactions of players (virtual or human) to a honky tonk shot.\nconst reactionsToHonkyTonk = function (playersReactingToHonkyTonk) {\n  //Case when one of the player involved is human\n  if (playersReactingToHonkyTonk[0].human || playersReactingToHonkyTonk[1].human) {\n    // We check that the virtual player has managed to do Houba Houba.\n    // hitOrMissHonkyTonk will return a boolean telling us if the virtual player has managed to houba houba.\n    humanResponseToHonkyTonk(\n      hitOrMissHonkyTonk(\n        playersReactingToHonkyTonk.find((player) => player.human === false),\n        \"Houba Houba\"\n      ),\n      playersReactingToHonkyTonk\n    );\n  } else {\n    // Case where none of the players who have to say houba houba are human\n\n    // houba0 et houba1 are booleans that tell us if the virtual player has successfully reacted to the honky tonk situation\n    // the booleans are true if a mistake has been committed and false otherwise\n    const houba0 = hitOrMissHonkyTonk(playersReactingToHonkyTonk[0], \"Houba Houba\");\n    const houba1 = hitOrMissHonkyTonk(playersReactingToHonkyTonk[1], \"Houba Houba\");\n\n    if (houba0 && houba1) {\n      // If both players are mistaken, they are both eliminated\n      mistakesWereMade(playersReactingToHonkyTonk[0]);\n      mistakesWereMade(playersReactingToHonkyTonk[1]);\n      eventsDisplay.virtualPlayerMistakeWarning(playersReactingToHonkyTonk[0].name, \"Houba Houba\");\n      eventsDisplay.virtualPlayerMistakeWarning(playersReactingToHonkyTonk[1].name, \"Houba Houba\");\n    } else if (!houba0 && !houba1) {\n      // case where both players have successfully houba houba. We must then relauch the game by calling another player\n      console.log(\n        `${playersReactingToHonkyTonk[0].name} & ${playersReactingToHonkyTonk[1].name} ont tous les deux réussi à faire Houba Houba `\n      );\n      eventsDisplay.virtualPlayerNoiseAnnouncement(playersReactingToHonkyTonk[0].name, \"Houba Houba\");\n      eventsDisplay.virtualPlayerNoiseAnnouncement(playersReactingToHonkyTonk[1].name, \"Houba Houba\");\n      relaunchGameAfterHoubaHouba(playersReactingToHonkyTonk[1]);\n    } else if (houba0 && !houba1) {\n      // The second player has been succesful at houba houba but the first has not\n      console.log(`${playersReactingToHonkyTonk[1].name} has achieved Houba Houba`);\n      eventsDisplay.virtualPlayerMistakeWarning(playersReactingToHonkyTonk[0].name, \"Houba Houba\");\n      eventsDisplay.virtualPlayerNoiseAnnouncement(playersReactingToHonkyTonk[1].name, \"Houba Houba\");\n      // Since a mistake has been committed, the elimination of the first player to houba houba is triggered\n\n      mistakesWereMade(playersReactingToHonkyTonk[0]);\n    } else if (!houba0 && houba1) {\n      // The second player has committed a mistake and must be eliminated but the first player managed to do it\n      console.log(`${playersReactingToHonkyTonk[0].name} has achieved Houba Houba`);\n      eventsDisplay.virtualPlayerNoiseAnnouncement(playersReactingToHonkyTonk[0].name, \"Houba Houba\");\n      eventsDisplay.virtualPlayerMistakeWarning(playersReactingToHonkyTonk[1].name, \"Houba Houba\");\n      mistakesWereMade(playersReactingToHonkyTonk[1]);\n      // The first player has been succesful at houba houba\n    }\n  }\n};\n\nexport const honkyTonkByVirtualPlayer = function () {\n  // First we want to understand who are the players who will have to react to the honky tonk shot\n  const playersToHoubaHouba = WhoWillHoubaHouba();\n\n  // Then we check if the virtual players involved managed to do Houba Houba\n  reactionsToHonkyTonk(playersToHoubaHouba);\n};\n","\"use strict\";\n\nimport * as eventsdisplay from \"./eventsDisplayController\";\n\nimport { lookForPlayersReactingToVadeRetro, chooseRandomPlayer } from \"../model\";\nimport { hitOrMissHonkyTonk } from \"../helpers\";\nimport { dringManagement } from \"./honkyController\";\nimport { mistakesWereMade } from \"./gameController\";\nimport { humanResponseToVadeRetro, checkHumanDesignationOfANewPlayer } from \"./buttonsController\";\n\nexport let playersToSatanas;\nexport const sayings = [\"Sa\", \"Ta\", \"Nas\"];\n\nconst whoWillSatanas = function () {\n  return lookForPlayersReactingToVadeRetro();\n};\n\nexport const relaunchGameAfterVadeRetro = function (playerToCallANewPlayer) {\n  console.log(`${playerToCallANewPlayer.name} doit désormais désigner quelqu'un pour devenir le nouveau joueur`);\n  eventsdisplay.playerHavingToDesignateAnotherPlayerAnnouncement(playerToCallANewPlayer.name);\n\n  // A player is randomly selected\n  const newPlayer = chooseRandomPlayer();\n  console.log(`${playerToCallANewPlayer.name} a appelé ${newPlayer.name} après avoir dit \"Ta\"`);\n  eventsdisplay.chosenPlayerNameAnnoucement(playerToCallANewPlayer.name, newPlayer.name, \"Ta\");\n\n  // We then test if the new player has successfully reacted by saying \"Dring\"\n  dringManagement(newPlayer, \"vade\");\n};\n\nexport const checkForSatanas = function (player = playersToSatanas[0], saying = sayings[0], i = 0) {\n  // We shall check at each time if the player involved is human or not\n  if (player.human) {\n    humanResponseToVadeRetro(saying);\n  } else {\n    // The parameters of the hitOrMissHonkyTonk functions are booleans that tell us if the virtual player has successfully reacted to the honky tonk situation\n    // the booleans are true if a mistake has been committed and false otherwise\n    if (hitOrMissHonkyTonk(player, saying)) {\n      console.log(`${player.name} n'a pas réussi à faire \"${saying}\"`);\n      eventsdisplay.virtualPlayerMistakeWarning(player.name, saying);\n      mistakesWereMade(player);\n    } else {\n      // Case where the player reacted successfully\n      console.log(`${player.name} a réussi à faire \"${saying}\"`);\n      eventsdisplay.virtualPlayerNoiseAnnouncement(player.name, saying);\n      // No need to carry on testing the reactions if 3 people have reacted successfully. We shall then move on\n      if (i >= 2) {\n        // Two cases : The player who said ta is human or not\n        if (playersToSatanas[1].human) {\n          // We are now going to take advantage of the fact that we already coded the part where we designate a new player for the konky tonk shot and use it instead od coding something specific\n          checkHumanDesignationOfANewPlayer(\"vade\");\n        } else {\n          relaunchGameAfterVadeRetro(playersToSatanas[1]);\n        }\n      } else {\n        checkForSatanas(playersToSatanas[i + 1], sayings[i + 1], i + 1);\n      }\n    }\n  }\n};\n\n////////////////////////////////////////////////////////:///////////////////////////////////::\n\nexport const vadeRetroByVirtualPlayer = function () {\n  // First we want to understand who are the players who will have to react to the vade retro shot\n  playersToSatanas = whoWillSatanas();\n  console.log(\"👁️ Voici les joueurs qui vont devoir faire Sa Ta Nas :\", playersToSatanas);\n  eventsdisplay.serviceMessage(\n    `👁️ Voici les joueurs qui vont devoir dire Sa, Ta et Nas : ${playersToSatanas[0].name}, ${playersToSatanas[1].name} et ${playersToSatanas[2].name}`,\n    \"player-change\"\n  );\n\n  // Then we check if the virtual players involved managed to do Sa/Ta/Nas\n  checkForSatanas();\n};\n","\"use strict\";\n\nimport * as eventsDisplay from \"./eventsDisplayController\";\n\nimport { chooseAPlayerThatIsNotHuman, chooseRandomPlayer } from \"../model\";\nimport { hasAPlayerCommitedAMistake, randomInt } from \"../helpers\";\nimport { virtualPlayerChoice, mistakesWereMade } from \"./gameController\";\nimport buttonsView from \"../views/buttonsView\";\n\nexport const letByVirtualPlayer = function () {\n  // If a virtual player has chosen to take, we need to clear the commands shown to the player\n  buttonsView.clearCommands();\n\n  // Let us notice that chooseRandomPlayer changes the current player in the model\n  const newPlayer = chooseAPlayerThatIsNotHuman();\n\n  console.log(`${newPlayer.name} a décidé de prendre`);\n  eventsDisplay.virtualPlayerShotAnnouncement(newPlayer.name, \"Je prends\");\n\n  // TEST POUR SAVOIR SI NEW PLAYER A REUSSI dire je prends\n  if (hasAPlayerCommitedAMistake(newPlayer, \"take\")) {\n    console.log(` 😡😡😡 ${newPlayer.name} n'a pas réussi à dire \"Je prends\" et est éliminé`);\n    eventsDisplay.virtualPlayerMistakeWarning(newPlayer.name, \"Je prends\");\n    mistakesWereMade();\n  }\n\n  setTimeout(() => {\n    virtualPlayerChoice(newPlayer);\n  }, 1000);\n};\n","\"use strict\";\n\nimport * as eventsDisplay from \"./eventsDisplayController\";\nimport {\n  chooseRandomPlayer,\n  currentPlayer,\n  currentPlayers,\n  endOfZap,\n  playerInitiatingAZap,\n  updateCurrentPlayer,\n  updateListOfZappedPlayers,\n} from \"../model\";\nimport { humanOrMachine, mistakesWereMade, virtualPlayerChoice } from \"./gameController\";\nimport { hasAPlayerCommitedAMistake, randomInt } from \"../helpers\";\nimport playersView from \"../views/playersView\";\nimport { humanResponseToZap } from \"./buttonsController\";\nimport { endGamebyDefeat } from \"./farewellController\";\n\n// We want to be able to monitor if all players have been zapped. Hence a counter.\nexport let zapCounter = 0;\n\n// Function to erase the parameters in the model once the zap sequence is finished\nexport const eraseZapConditions = function () {\n  // reset the zap counter\n  zapCounter = 0;\n  endOfZap();\n};\n\nexport const carryOnZapProcess = function (playerZapped) {\n  playersView.highlightActivePlayer(playerZapped);\n  updateListOfZappedPlayers(playerZapped);\n  zapCounter++;\n  console.log(\"zapCounter :\", zapCounter);\n  updateCurrentPlayer(playerZapped.name);\n};\n\n// The player which has just been zapped shall decide whether he wants to zap or not\nexport const toZapOrNotToZap = function (playerZapped) {\n  // We shall state that the player that's been zapped is now the current player\n  console.log(\"🐭🐭Test currentPlayer🐭🐭\", currentPlayer);\n  const rand = randomInt(0, 100);\n  if (rand <= 90) {\n    // Case where a player elected to zap another player\n\n    zapByVirtualPlayer(playerZapped);\n  } else {\n    // Case where a player chose to start another round without zapping\n    console.log(`${playerZapped.name} dit 'Je prends'`);\n    eventsDisplay.virtualPlayerShotAnnouncement(playerZapped.name, \"Je prends\");\n\n    // We shall unzap all players.\n    eraseZapConditions();\n    // There is a real chance that the player electing not to zap will commit a mistake !!\n    if (hasAPlayerCommitedAMistake(playerZapped, \"take\")) {\n      console.log(`${playerZapped.name} n'a pas réussi à dire 'Je prends'`);\n      eventsDisplay.virtualPlayerMistakeWarning(playerZapped.name, \"Je prends\");\n      console.log(`${playerZapped.name} est éliminé`);\n      mistakesWereMade(playerZapped);\n    } else {\n      // Case where no mistake has been committed\n      // The second parameter is to make it impossible for a player to zap after having said 'Je prends'\n      virtualPlayerChoice(playerZapped, false);\n    }\n  }\n};\n\nexport const lastZap = function (player, playerZapped) {\n  if (playerZapped.numero === playerInitiatingAZap.numero) {\n    // Case where the player manages to zap the first player ta have zapped\n    console.log(`${player.name} a réussi à zapper le premier joueur à avoir zappé : ${playerInitiatingAZap.name}`);\n    console.log(`C'est donc à ${playerInitiatingAZap.name} de reprendre le jeu`);\n    eventsDisplay.lastZapOkAnnouncement(player.name, playerInitiatingAZap.name);\n    // Back to a normal round\n    updateCurrentPlayer(playerZapped.name);\n    humanOrMachine();\n  } else {\n    // Case where the player fails to zap the first player to have zapped\n    console.log(\n      `${player.name} n'a pas réussi à zapper le premier joueur à avoir zappé : ${playerInitiatingAZap.name} puisqu'il a zappé ${playerZapped.name}`\n    );\n    eventsDisplay.lastZapFailAnnouncement(player.name, playerInitiatingAZap.name, playerZapped.name);\n    console.log(`${player.name} est donc éliminé`);\n\n    // We shall erase  all zap parameters.\n    eraseZapConditions();\n\n    // Since this function handles all lastZap situations for human or virtual players, we should differentiate depending on the nature of the player\n    if (player.human) {\n      endGamebyDefeat();\n    } else {\n      mistakesWereMade(player);\n    }\n  }\n};\n\nconst humanZap = function (playerZapped) {\n  console.log(\"playerZapped humanZap:\", playerZapped);\n  carryOnZapProcess(playerZapped);\n  setTimeout(() => {\n    humanResponseToZap();\n  }, 2000);\n};\n\nexport const zapByVirtualPlayer = function (player) {\n  // The presence of a parameter allows us to make sure that a player will not zap him or herself\n  // chooseRandomPlayer updates the current player in the model\n  const playerZapped = chooseRandomPlayer(player);\n\n  // Guard function to handle the situation where everyone has previously been zapped the last zap situation;\n  if (zapCounter === currentPlayers.length - 1) {\n    console.log(\"Tous les joueurs ont été zappés !!!\");\n    eventsDisplay.serviceMessage(\"🙉 Tous les joueurs ont été zappés !!!\");\n    lastZap(player, playerZapped);\n    return;\n  }\n  console.log(\"🐹🐹 player zapping 🐹🐹 :\", player.name, \"🐹🐹 player zapped 🐹🐹 :\", playerZapped.name);\n  eventsDisplay.zapAnnouncement(player.name, playerZapped.name);\n  // Guard function to handle a situation in which someone who had previously been zapped is zapped again\n  if (playerZapped.zapped) {\n    console.log(`${playerZapped.name} a été zappé par ${player.name} alors qu'il avait déjà été zappé`);\n    eventsDisplay.zapFailAnnouncement(playerZapped.name, player.name);\n    console.log(`${player.name} est donc éliminé`);\n    // We shall erase  all zap parameters.\n    eraseZapConditions();\n    mistakesWereMade(player);\n    return;\n  }\n  // case where the zapped player is human\n  if (playerZapped.human) {\n    humanZap(playerZapped);\n    return;\n  }\n  carryOnZapProcess(playerZapped);\n  setTimeout(() => {\n    toZapOrNotToZap(playerZapped);\n  }, 2000);\n};\n","import farewellView from \"../views/farewellView\";\nimport { initializeGame } from \"./gameController\";\n\nexport const endGamebyDefeat = function () {\n  farewellView.showDefeatPopup();\n  farewellView.handleStartAgainDecision(startAgain);\n};\n\nexport const endGameByVictory = function () {\n  farewellView.showVictoryPopup();\n  farewellView.handleStartAgainDecision(startAgain);\n};\n\nexport const startAgain = function () {\n  console.log(\"trig appui sur le bouton 'Start Again'\");\n  initializeGame();\n};\n","class farewellView {\n  constructor() {\n    this.defeatPopup = document.querySelector(\".popup-endgame--defeat\");\n    this.victoryPopup = document.querySelector(\".popup-endgame--victory\");\n    this.overlay = document.querySelector(\".overlay\");\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  addOverlay() {\n    this.overlay.style.display = \"flex\";\n  }\n\n  removeOverlay() {\n    this.overlay.style.display = \"none\";\n  }\n\n  showDefeatPopup() {\n    this.defeatPopup.style.display = \"flex\";\n    this.addOverlay();\n  }\n\n  hideDefeatPopup() {\n    this.defeatPopup.style.display = \"none\";\n    this.removeOverlay();\n  }\n\n  showVictoryPopup() {\n    this.victoryPopup.style.display = \"flex\";\n    this.addOverlay();\n  }\n\n  hideVictoryPopup() {\n    this.victoryPopup.style.display = \"none\";\n    this.removeOverlay();\n  }\n\n  handleClick(event, handler) {\n    console.log(\"event target\", event.target);\n    if (event.target.classList.contains(\"start-again-button\")) {\n      console.log(\"🦄🦄🦄 Le bouton a été pressé\");\n      // We want to close the right popup\n      if (event.target.id === \"start-again-button-after-defeat\") {\n        this.hideDefeatPopup();\n      }\n      if (event.target.id === \"start-again-button-after-victory\") {\n        this.hideVictoryPopup();\n      }\n      document.removeEventListener(\"click\", this.insideListener);\n      handler();\n    }\n  }\n\n  handleStartAgainDecision(handler) {\n    this.insideListener = (event) => this.handleClick(event, handler);\n    document.addEventListener(\"click\", this.insideListener);\n    // by clicking on a button, the human player will start another game.\n  }\n\n  StartAgainDecisionHandled() {\n    console.log(\"trig remover event listener\");\n  }\n}\n\nexport default new farewellView();\n","class welcomeView {\n  waitForStart(handler) {\n    // We do not want the form to be emptied is someone presses enter\n    const preventSubmissionByPressingEnter = function (event) {\n      if (event.key === \"Enter\") {\n        event.preventDefault();\n      }\n    };\n\n    const insideListener = function () {\n      const humanPlayerName = document.querySelector(\".form__input\").value;\n\n      // Guard to check that a name has actually been typed\n      if (humanPlayerName === \"\") {\n        alert(\"On t'a demandé d'écrire ton nom, abruti !!\");\n        return;\n      }\n\n      // Send the name back to the controller for the game to start with this information\n      handler(humanPlayerName);\n      //Hide the welcome popup\n      document.querySelector(\".popup-welcome\").style.display = \"none\";\n      document.querySelector(\".start__button\").removeEventListener(\"click\", insideListener);\n      document.querySelector(\".form\").removeEventListener(\"keydown\", preventSubmissionByPressingEnter);\n    };\n\n    document.querySelector(\".form\").addEventListener(\"keydown\", preventSubmissionByPressingEnter);\n    document.querySelector(\".start__button\").addEventListener(\"click\", insideListener);\n  }\n}\n\nexport default new welcomeView();\n"],"names":[],"version":3,"file":"index.5baa4167.js.map","sourceRoot":"/__parcel_source_root/"}